// –®–∞–≥ –º–∞—Å—Ç–µ—Ä–∞: –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–∞
import React from 'react'
import ResultsVisualizer from '../../ResultsVisualizer/ResultsVisualizer'

const ResultsStep = ({ data, onUpdate, errors, isCalculating, project }) => {
  const { results } = data

  if (isCalculating) {
    return (
      <div className="step-content">
        <div className="calculation-progress">
          <div className="progress-spinner"></div>
          <h3>–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ä–∞—Å—á–µ—Ç –ê–ü–°...</h3>
          <p>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ. –†–∞—Å—á–µ—Ç –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥.</p>

          <div className="progress-steps">
            <div className="progress-step completed">‚úì –ê–Ω–∞–ª–∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–¥–∞–Ω–∏—è</div>
            <div className="progress-step completed">‚úì –í—ã–±–æ—Ä –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è</div>
            <div className="progress-step active">‚è≥ –†–∞—Å—á–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–∑–≤–µ—â–∞—Ç–µ–ª–µ–π</div>
            <div className="progress-step">‚è≥ –†–∞—Å—á–µ—Ç –∑–æ–Ω –∏ –ü–ü–ö–ü</div>
            <div className="progress-step">‚è≥ –†–∞—Å—á–µ—Ç –∫–∞–±–µ–ª—å–Ω–æ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏</div>
            <div className="progress-step">‚è≥ –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Ç–æ–≥–æ–≤</div>
          </div>
        </div>
      </div>
    )
  }

  if (!results) {
    return (
      <div className="step-content">
        <div className="no-results">
          <h3>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã</h3>
          <p>–í–µ—Ä–Ω–∏—Ç–µ—Å—å –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —à–∞–≥—É –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Ä–∞—Å—á–µ—Ç.</p>
        </div>
      </div>
    )
  }

  return (
    <div className="step-content">
      <h2 className="step-title">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–∞ –ê–ü–°</h2>
      <p className="step-description">
        –ü–æ–¥—Ä–æ–±–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø–æ–∂–∞—Ä–Ω–æ–π —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏–∏
      </p>

      {/* –ö—Ä–∞—Ç–∫–∞—è —Å–≤–æ–¥–∫–∞ */}
      <div className="results-summary-quick">
        <div className="summary-card">
          <div className="summary-icon">üîç</div>
          <div className="summary-content">
            <h4>–ò–∑–≤–µ—â–∞—Ç–µ–ª–∏</h4>
            <div className="summary-value">
              {(results.smokeDetectors || 0) + (results.heatDetectors || 0)}
            </div>
            <div className="summary-detail">
              {results.smokeDetectors || 0} –¥—ã–º–æ–≤—ã—Ö + {results.heatDetectors || 0} —Ç–µ–ø–ª–æ–≤—ã—Ö
            </div>
          </div>
        </div>

        <div className="summary-card">
          <div className="summary-icon">üö®</div>
          <div className="summary-content">
            <h4>–û–ø–æ–≤–µ—â–µ–Ω–∏–µ</h4>
            <div className="summary-value">{results.sounders || 0}</div>
            <div className="summary-detail">–∑–≤—É–∫–æ–≤—ã—Ö –æ–ø–æ–≤–µ—â–∞—Ç–µ–ª–µ–π</div>
          </div>
        </div>

        <div className="summary-card">
          <div className="summary-icon">üèóÔ∏è</div>
          <div className="summary-content">
            <h4>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</h4>
            <div className="summary-value">{results.zones || 0}</div>
            <div className="summary-detail">–∑–æ–Ω, {results.controlPanels || 0} –ü–ü–ö–ü</div>
          </div>
        </div>

        <div className="summary-card primary">
          <div className="summary-icon">üí∞</div>
          <div className="summary-content">
            <h4>–°—Ç–æ–∏–º–æ—Å—Ç—å</h4>
            <div className="summary-value">
              {(results.totalCost || 0).toLocaleString('ru-RU')} ‚ÇΩ
            </div>
            <div className="summary-detail">
              {Math.round((results.totalCost || 0) / ((data.building?.aboveGroundArea || 1) + (data.building?.undergroundArea || 0)))} ‚ÇΩ/–º¬≤
            </div>
          </div>
        </div>
      </div>

      {/* –î–µ—Ç–∞–ª—å–Ω–∞—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è */}
      <div className="results-detailed">
        <ResultsVisualizer results={results} project={project} />
      </div>

      {/* –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ */}
      <div className="calculation-recommendations">
        <h4>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ –ø—Ä–∏–º–µ—á–∞–Ω–∏—è:</h4>
        <div className="recommendations-list">
          {generateRecommendations(results, data)}
        </div>
      </div>

      {/* –ù–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ —Å—Å—ã–ª–∫–∏ */}
      <div className="regulatory-references">
        <h4>–ù–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã:</h4>
        <ul>
          <li>–°–ü 484.1311500.2020 "–°–∏—Å—Ç–µ–º—ã –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∂–∞—Ä–Ω–æ–π –∑–∞—â–∏—Ç—ã"</li>
          <li>–°–ü 5.13130.2009 "–£—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–æ–∂–∞—Ä–Ω–æ–π —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏–∏"</li>
          <li>–ì–û–°–¢ –† 53325-2012 "–¢–µ—Ö–Ω–∏–∫–∞ –ø–æ–∂–∞—Ä–Ω–∞—è"</li>
          <li>–ù–ü–ë 88-2001 "–£—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–æ–∂–∞—Ä–æ—Ç—É—à–µ–Ω–∏—è –∏ —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏–∏"</li>
        </ul>
      </div>
    </div>
  )
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
const generateRecommendations = (results, data) => {
  const recommendations = []

  // –ê–Ω–∞–ª–∏–∑ –ø–ª–æ—Ç–Ω–æ—Å—Ç–∏ –∏–∑–≤–µ—â–∞—Ç–µ–ª–µ–π
  const totalArea = (data.building?.aboveGroundArea || 0) + (data.building?.undergroundArea || 0)
  const totalDetectors = (results.smokeDetectors || 0) + (results.heatDetectors || 0)
  const detectorDensity = totalArea / (totalDetectors || 1)

  if (detectorDensity > 100) {
    recommendations.push({
      type: 'warning',
      text: `–ü–ª–æ—Ç–Ω–æ—Å—Ç—å –∏–∑–≤–µ—â–∞—Ç–µ–ª–µ–π (${detectorDensity.toFixed(1)} –º¬≤/–∏–∑–≤–µ—â–∞—Ç–µ–ª—å) –ø—Ä–µ–≤—ã—à–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—É—é. –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–∑–≤–µ—â–∞—Ç–µ–ª–µ–π.`
    })
  } else if (detectorDensity < 50) {
    recommendations.push({
      type: 'info',
      text: `–ü–ª–æ—Ç–Ω–æ—Å—Ç—å –∏–∑–≤–µ—â–∞—Ç–µ–ª–µ–π –≤—ã—Å–æ–∫–∞—è (${detectorDensity.toFixed(1)} –º¬≤/–∏–∑–≤–µ—â–∞—Ç–µ–ª—å). –í–æ–∑–º–æ–∂–Ω–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è —Å—Ç–æ–∏–º–æ—Å—Ç–∏.`
    })
  } else {
    recommendations.push({
      type: 'success',
      text: `–ü–ª–æ—Ç–Ω–æ—Å—Ç—å –∏–∑–≤–µ—â–∞—Ç–µ–ª–µ–π (${detectorDensity.toFixed(1)} –º¬≤/–∏–∑–≤–µ—â–∞—Ç–µ–ª—å) —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º.`
    })
  }

  // –ê–Ω–∞–ª–∏–∑ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è –¥—ã–º–æ–≤—ã—Ö –∏ —Ç–µ–ø–ª–æ–≤—ã—Ö
  const smokeRatio = (results.smokeDetectors || 0) / (totalDetectors || 1)
  if (data.building?.buildingType === '–§1.3' && smokeRatio < 0.7) {
    recommendations.push({
      type: 'warning',
      text: '–î–ª—è –∂–∏–ª—ã—Ö –∑–¥–∞–Ω–∏–π —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –Ω–µ –º–µ–Ω–µ–µ 70% –¥—ã–º–æ–≤—ã—Ö –∏–∑–≤–µ—â–∞—Ç–µ–ª–µ–π.'
    })
  }

  // –ê–Ω–∞–ª–∏–∑ –∑–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  const zonesPerPanel = (results.zones || 0) / (results.controlPanels || 1)
  if (zonesPerPanel > 8) {
    recommendations.push({
      type: 'warning',
      text: `–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–æ–Ω –Ω–∞ –æ–¥–∏–Ω –ü–ü–ö–ü (${zonesPerPanel.toFixed(1)}) –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–∑–±—ã—Ç–æ—á–Ω—ã–º. –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–∏–±–æ—Ä–æ–≤.`
    })
  }

  // –ê–Ω–∞–ª–∏–∑ —Å—Ç–æ–∏–º–æ—Å—Ç–∏
  const costPerSqm = (results.totalCost || 0) / totalArea
  if (costPerSqm > 1000) {
    recommendations.push({
      type: 'info',
      text: `–°—Ç–æ–∏–º–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã (${costPerSqm.toFixed(0)} ‚ÇΩ/–º¬≤) –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –≤—ã—Å–æ–∫–∞—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—ã–±–æ—Ä –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è.`
    })
  }

  return recommendations.map((rec, index) => (
    <div key={index} className={`recommendation ${rec.type}`}>
      <span className="recommendation-icon">
        {rec.type === 'success' ? '‚úÖ' : rec.type === 'warning' ? '‚ö†Ô∏è' : '‚ÑπÔ∏è'}
      </span>
      <span className="recommendation-text">{rec.text}</span>
    </div>
  ))
}

export default ResultsStep