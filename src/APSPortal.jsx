// –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ê–ü–° –ø–æ—Ä—Ç–∞–ª–∞ —Å –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏
import React, { useState, useEffect } from 'react'
import './APSPortal.css'

// –°–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –µ—â–µ —Å–æ–∑–¥–∞—é—Ç—Å—è
const ProjectList = ({ onCreateProject }) => (
  <div style={{ padding: '40px', textAlign: 'center' }}>
    <h2>üìÅ –ü—Ä–æ–µ–∫—Ç—ã –ê–ü–°</h2>
    <p>–†–∞–∑–¥–µ–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...</p>
    <button onClick={onCreateProject} style={{
      padding: '10px 20px',
      background: '#1677ff',
      color: 'white',
      border: 'none',
      borderRadius: '8px',
      cursor: 'pointer'
    }}>
      + –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç
    </button>
  </div>
)

const ProjectForm = ({ onSave, onCancel }) => (
  <div style={{
    position: 'fixed',
    top: 0,
    left: 0,
    width: '100%',
    height: '100%',
    background: 'rgba(0,0,0,0.5)',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    zIndex: 1000
  }}>
    <div style={{
      background: 'white',
      color: '#262626',
      padding: '30px',
      borderRadius: '12px',
      maxWidth: '500px',
      width: '90%'
    }}>
      <h3>–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞</h3>
      <p>–§–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...</p>
      <div style={{ display: 'flex', gap: '10px', marginTop: '20px' }}>
        <button onClick={onCancel} style={{
          padding: '8px 16px',
          background: '#f5f5f5',
          border: '1px solid #d9d9d9',
          borderRadius: '6px',
          cursor: 'pointer'
        }}>
          –û—Ç–º–µ–Ω–∞
        </button>
        <button onClick={() => onSave({ name: '–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç', object_name: '–¢–µ—Å—Ç–æ–≤—ã–π –æ–±—ä–µ–∫—Ç' })} style={{
          padding: '8px 16px',
          background: '#1677ff',
          color: 'white',
          border: 'none',
          borderRadius: '6px',
          cursor: 'pointer'
        }}>
          –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
        </button>
      </div>
    </div>
  </div>
)

const CalculationWizard = ({ project, onSave, onCancel }) => {
  const [currentStep, setCurrentStep] = useState(1)

  const steps = [
    { title: '–ó–¥–∞–Ω–∏–µ', icon: 'üè¢' },
    { title: '–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ', icon: 'üîß' },
    { title: '–†–∞—Å—á–µ—Ç', icon: '‚öôÔ∏è' },
    { title: '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã', icon: 'üìä' }
  ]

  return (
    <div style={{
      position: 'fixed',
      top: 0,
      left: 0,
      width: '100%',
      height: '100%',
      background: 'rgba(0,0,0,0.5)',
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center',
      zIndex: 1000
    }}>
      <div style={{
        background: 'white',
        color: '#262626',
        borderRadius: '12px',
        maxWidth: '800px',
        width: '90%',
        maxHeight: '90%',
        overflow: 'hidden',
        display: 'flex',
        flexDirection: 'column'
      }}>
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div style={{
          background: 'linear-gradient(135deg, #1677ff, #0958d9)',
          color: 'white',
          padding: '20px 30px',
          display: 'flex',
          justifyContent: 'space-between',
          alignItems: 'center'
        }}>
          <h3 style={{ margin: 0 }}>üßÆ –ú–∞—Å—Ç–µ—Ä —Ä–∞—Å—á–µ—Ç–∞ –ê–ü–°</h3>
          <button onClick={onCancel} style={{
            background: 'none',
            border: 'none',
            color: 'white',
            fontSize: '1.5rem',
            cursor: 'pointer'
          }}>‚úï</button>
        </div>

        {/* –ü—Ä–æ–≥—Ä–µ—Å—Å */}
        <div style={{
          background: 'white',
          color: '#262626',
          padding: '20px 30px',
          borderBottom: '1px solid #f0f0f0'
        }}>
          <div style={{
            display: 'flex',
            justifyContent: 'space-between',
            alignItems: 'center'
          }}>
            {steps.map((step, index) => (
              <div key={index} style={{
                display: 'flex',
                flexDirection: 'column',
                alignItems: 'center',
                flex: 1,
                opacity: index + 1 <= currentStep ? 1 : 0.5
              }}>
                <div style={{
                  width: '50px',
                  height: '50px',
                  borderRadius: '50%',
                  background: index + 1 <= currentStep ? '#1677ff' : '#f5f5f5',
                  color: index + 1 <= currentStep ? 'white' : '#8c8c8c',
                  display: 'flex',
                  alignItems: 'center',
                  justifyContent: 'center',
                  fontSize: '1.2rem',
                  marginBottom: '8px'
                }}>
                  {step.icon}
                </div>
                <div style={{ fontSize: '0.9rem', fontWeight: '500' }}>
                  {step.title}
                </div>
              </div>
            ))}
          </div>
        </div>

        {/* –ö–æ–Ω—Ç–µ–Ω—Ç */}
        <div style={{
          flex: 1,
          padding: '30px',
          overflow: 'auto'
        }}>
          {currentStep === 1 && (
            <div>
              <h4>–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–¥–∞–Ω–∏—è</h4>
              <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '20px' }}>
                <div>
                  <label style={{ display: 'block', marginBottom: '5px' }}>–ü–ª–æ—â–∞–¥—å (–º¬≤)</label>
                  <input type="number" defaultValue="5000" style={{
                    width: '100%', padding: '8px', border: '1px solid #d9d9d9', borderRadius: '6px'
                  }} />
                </div>
                <div>
                  <label style={{ display: 'block', marginBottom: '5px' }}>–≠—Ç–∞–∂–∏</label>
                  <input type="number" defaultValue="10" style={{
                    width: '100%', padding: '8px', border: '1px solid #d9d9d9', borderRadius: '6px'
                  }} />
                </div>
              </div>
            </div>
          )}

          {currentStep === 2 && (
            <div>
              <h4>–í—ã–±–æ—Ä –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è</h4>
              <div style={{ display: 'grid', gap: '15px' }}>
                {['–î—ã–º–æ–≤—ã–µ –∏–∑–≤–µ—â–∞—Ç–µ–ª–∏', '–¢–µ–ø–ª–æ–≤—ã–µ –∏–∑–≤–µ—â–∞—Ç–µ–ª–∏', '–†—É—á–Ω—ã–µ –∏–∑–≤–µ—â–∞—Ç–µ–ª–∏', '–û–ø–æ–≤–µ—â–∞—Ç–µ–ª–∏'].map((item, index) => (
                  <label key={index} style={{ display: 'flex', alignItems: 'center', gap: '10px' }}>
                    <input type="checkbox" defaultChecked />
                    <span>{item}</span>
                  </label>
                ))}
              </div>
            </div>
          )}

          {currentStep === 3 && (
            <div>
              <h4>–ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ä–∞—Å—á–µ—Ç–∞</h4>
              <div style={{ display: 'grid', gap: '15px' }}>
                <div>
                  <label style={{ display: 'block', marginBottom: '5px' }}>–ü–ª–æ—â–∞–¥—å –ø–æ–∫—Ä—ã—Ç–∏—è –∏–∑–≤–µ—â–∞—Ç–µ–ª—è (–º¬≤)</label>
                  <input type="number" defaultValue="85" style={{
                    width: '200px', padding: '8px', border: '1px solid #d9d9d9', borderRadius: '6px'
                  }} />
                </div>
                <div>
                  <label style={{ display: 'block', marginBottom: '5px' }}>–¢–∏–ø —Å–∏—Å—Ç–µ–º—ã</label>
                  <select style={{
                    width: '200px', padding: '8px', border: '1px solid #d9d9d9', borderRadius: '6px'
                  }}>
                    <option>–ê–¥—Ä–µ—Å–Ω–∞—è</option>
                    <option>–ü–æ—Ä–æ–≥–æ–≤–∞—è</option>
                  </select>
                </div>
              </div>
            </div>
          )}

          {currentStep === 4 && (
            <div>
              <h4>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–∞</h4>
              <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', gap: '15px' }}>
                <div style={{ background: '#f8f9fa', padding: '15px', borderRadius: '8px' }}>
                  <div style={{ fontSize: '0.9rem', color: '#8c8c8c' }}>–î—ã–º–æ–≤—ã–µ –∏–∑–≤–µ—â–∞—Ç–µ–ª–∏</div>
                  <div style={{ fontSize: '1.5rem', fontWeight: 'bold', color: '#1677ff' }}>47 —à—Ç</div>
                </div>
                <div style={{ background: '#f8f9fa', padding: '15px', borderRadius: '8px' }}>
                  <div style={{ fontSize: '0.9rem', color: '#8c8c8c' }}>–¢–µ–ø–ª–æ–≤—ã–µ –∏–∑–≤–µ—â–∞—Ç–µ–ª–∏</div>
                  <div style={{ fontSize: '1.5rem', fontWeight: 'bold', color: '#fa8c16' }}>12 —à—Ç</div>
                </div>
                <div style={{ background: '#f8f9fa', padding: '15px', borderRadius: '8px' }}>
                  <div style={{ fontSize: '0.9rem', color: '#8c8c8c' }}>–û–ø–æ–≤–µ—â–∞—Ç–µ–ª–∏</div>
                  <div style={{ fontSize: '1.5rem', fontWeight: 'bold', color: '#52c41a' }}>15 —à—Ç</div>
                </div>
                <div style={{ background: '#f8f9fa', padding: '15px', borderRadius: '8px' }}>
                  <div style={{ fontSize: '0.9rem', color: '#8c8c8c' }}>–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å</div>
                  <div style={{ fontSize: '1.5rem', fontWeight: 'bold', color: '#722ed1' }}>850 000 ‚ÇΩ</div>
                </div>
              </div>
            </div>
          )}
        </div>

        {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
        <div style={{
          background: 'white',
          color: '#262626',
          padding: '20px 30px',
          borderTop: '1px solid #f0f0f0',
          display: 'flex',
          justifyContent: 'space-between',
          alignItems: 'center'
        }}>
          <div>
            {currentStep > 1 && (
              <button onClick={() => setCurrentStep(currentStep - 1)} style={{
                padding: '8px 16px',
                background: '#f5f5f5',
                border: '1px solid #d9d9d9',
                borderRadius: '6px',
                cursor: 'pointer'
              }}>
                ‚Üê –ù–∞–∑–∞–¥
              </button>
            )}
          </div>

          <div style={{ color: '#8c8c8c', fontSize: '0.9rem' }}>
            –®–∞–≥ {currentStep} –∏–∑ {steps.length}
          </div>

          <div>
            {currentStep < steps.length ? (
              <button onClick={() => setCurrentStep(currentStep + 1)} style={{
                padding: '8px 16px',
                background: '#1677ff',
                color: 'white',
                border: 'none',
                borderRadius: '6px',
                cursor: 'pointer'
              }}>
                {currentStep === 3 ? '–†–∞—Å—Å—á–∏—Ç–∞—Ç—å' : '–î–∞–ª–µ–µ'} ‚Üí
              </button>
            ) : (
              <button onClick={() => {
                onSave({
                  projectId: project?.id,
                  results: {
                    smokeDetectors: 47,
                    heatDetectors: 12,
                    manualCallPoints: 8,
                    sounders: 15,
                    zones: 5,
                    controlPanels: 2,
                    totalCost: 850000
                  }
                })
              }} style={{
                padding: '8px 16px',
                background: '#52c41a',
                color: 'white',
                border: 'none',
                borderRadius: '6px',
                cursor: 'pointer'
              }}>
                –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–∞—Å—á–µ—Ç
              </button>
            )}
          </div>
        </div>
      </div>
    </div>
  )
}

// –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è —Ö—É–∫–æ–≤
const useProjects = () => ({
  projects: [
    {
      id: '1',
      name: '–ñ–ö "–°–æ–ª–Ω–µ—á–Ω—ã–π"',
      object_name: '–ú–Ω–æ–≥–æ–∫–≤–∞—Ä—Ç–∏—Ä–Ω—ã–π –¥–æ–º',
      status: '–ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ',
      budget: 2500000,
      created_at: new Date().toISOString()
    },
    {
      id: '2',
      name: '–û—Ñ–∏—Å–Ω—ã–π —Ü–µ–Ω—Ç—Ä "–ü—Ä–µ—Å—Ç–∏–∂"',
      object_name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–µ –∑–¥–∞–Ω–∏–µ',
      status: '–º–æ–Ω—Ç–∞–∂',
      budget: 1800000,
      created_at: new Date().toISOString()
    }
  ],
  createProject: async (data) => console.log('Creating project:', data),
  updateProject: async (id, data) => console.log('Updating project:', id, data),
  fetchProjects: async () => console.log('Fetching projects')
})

const useCalculations = () => ({
  calculations: [
    {
      id: '1',
      aps_projects: { name: '–ñ–ö "–°–æ–ª–Ω–µ—á–Ω—ã–π"', object_name: '–ú–Ω–æ–≥–æ–∫–≤–∞—Ä—Ç–∏—Ä–Ω—ã–π –¥–æ–º' },
      calculation_date: new Date().toISOString(),
      smoke_detectors_count: 50,
      heat_detectors_count: 12,
      estimated_cost: 850000
    }
  ],
  saveCalculation: async (data) => console.log('Saving calculation:', data)
})

const APSPortal = () => {
  // –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ—Ä—Ç–∞–ª–∞
  const [activeSection, setActiveSection] = useState('dashboard')
  const [showProjectForm, setShowProjectForm] = useState(false)
  const [showCalculationWizard, setShowCalculationWizard] = useState(false)
  const [selectedProject, setSelectedProject] = useState(null)
  const [editingProject, setEditingProject] = useState(null)

  // –•—É–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏
  const { projects, createProject, updateProject, fetchProjects } = useProjects()
  const { calculations, saveCalculation } = useCalculations()

  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Ä—Ç–∞–ª–∞
  const [portalStats, setPortalStats] = useState({
    totalProjects: 0,
    activeCalculations: 0,
    totalBudget: 0,
    completedProjects: 0
  })

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  useEffect(() => {
    if (projects.length > 0) {
      const stats = {
        totalProjects: projects.length,
        activeCalculations: calculations.length,
        totalBudget: projects.reduce((sum, p) => sum + (p.budget || 0), 0),
        completedProjects: projects.filter(p => p.status === '–∑–∞–≤–µ—Ä—à–µ–Ω').length
      }
      setPortalStats(stats)
    }
  }, [projects, calculations])

  // –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–µ –º–µ–Ω—é
  const navigationSections = [
    {
      id: 'dashboard',
      title: '–ì–ª–∞–≤–Ω–∞—è',
      icon: 'üè†',
      description: '–û–±–∑–æ—Ä –ø–æ—Ä—Ç–∞–ª–∞ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'
    },
    {
      id: 'projects',
      title: '–ü—Ä–æ–µ–∫—Ç—ã',
      icon: 'üìÅ',
      description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏ –ê–ü–°'
    },
    {
      id: 'calculator',
      title: '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä',
      icon: 'üßÆ',
      description: '–†–∞—Å—á–µ—Ç –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –ê–ü–°'
    },
    {
      id: 'calculations',
      title: '–†–∞—Å—á–µ—Ç—ã',
      icon: 'üìä',
      description: '–ò—Å—Ç–æ—Ä–∏—è —Ä–∞—Å—á–µ—Ç–æ–≤'
    },
    {
      id: 'reports',
      title: '–û—Ç—á–µ—Ç—ã',
      icon: 'üìã',
      description: '–≠–∫—Å–ø–æ—Ä—Ç –∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã'
    },
    {
      id: 'settings',
      title: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏',
      icon: '‚öôÔ∏è',
      description: '–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã'
    }
  ]

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
  const handleCreateProject = () => {
    setEditingProject(null)
    setShowProjectForm(true)
  }

  const handleEditProject = (project) => {
    setEditingProject(project)
    setShowProjectForm(true)
  }

  const handleSelectProject = (project, action = 'view') => {
    setSelectedProject(project)
    if (action === 'calculate') {
      setShowCalculationWizard(true)
    } else if (action === 'edit') {
      handleEditProject(project)
    }
  }

  const handleSaveProject = async (projectData) => {
    try {
      if (editingProject) {
        await updateProject(editingProject.id, projectData)
      } else {
        await createProject(projectData)
      }
      setShowProjectForm(false)
      setEditingProject(null)
      await fetchProjects()
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞:', error)
      throw error
    }
  }

  const handleSaveCalculation = async (calculationData) => {
    try {
      await saveCalculation(calculationData)
      setShowCalculationWizard(false)
      setSelectedProject(null)
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–∞—Å—á–µ—Ç–∞:', error)
      throw error
    }
  }

  const formatCurrency = (amount) => {
    return new Intl.NumberFormat('ru-RU', {
      style: 'currency',
      currency: 'RUB',
      minimumFractionDigits: 0
    }).format(amount || 0)
  }

  // –†–µ–Ω–¥–µ—Ä –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  const renderDashboard = () => (
    <div className="dashboard">
      <div className="dashboard-header">
        <h1>–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –ø–æ—Ä—Ç–∞–ª –ê–ü–°</h1>
        <p>–°–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Ä–∞—Å—á–µ—Ç–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –ø–æ–∂–∞—Ä–Ω—ã—Ö —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏–π</p>
      </div>

      <div className="stats-grid">
        <div className="stat-card primary">
          <div className="stat-icon">üìÅ</div>
          <div className="stat-content">
            <h3>–ü—Ä–æ–µ–∫—Ç—ã</h3>
            <div className="stat-value">{portalStats.totalProjects}</div>
            <div className="stat-detail">
              {portalStats.completedProjects} –∑–∞–≤–µ—Ä—à–µ–Ω–æ
            </div>
          </div>
        </div>

        <div className="stat-card">
          <div className="stat-icon">üßÆ</div>
          <div className="stat-content">
            <h3>–†–∞—Å—á–µ—Ç—ã</h3>
            <div className="stat-value">{portalStats.activeCalculations}</div>
            <div className="stat-detail">–≤—ã–ø–æ–ª–Ω–µ–Ω–æ</div>
          </div>
        </div>

        <div className="stat-card">
          <div className="stat-icon">üí∞</div>
          <div className="stat-content">
            <h3>–û–±—â–∏–π –±—é–¥–∂–µ—Ç</h3>
            <div className="stat-value">{formatCurrency(portalStats.totalBudget)}</div>
            <div className="stat-detail">–≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤</div>
          </div>
        </div>

        <div className="stat-card">
          <div className="stat-icon">üìà</div>
          <div className="stat-content">
            <h3>–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</h3>
            <div className="stat-value">
              {portalStats.totalProjects > 0
                ? Math.round((portalStats.completedProjects / portalStats.totalProjects) * 100)
                : 0}%
            </div>
            <div className="stat-detail">–∑–∞–≤–µ—Ä—à–µ–Ω–∏—è</div>
          </div>
        </div>
      </div>

      <div className="quick-actions">
        <h2>–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h2>
        <div className="actions-grid">
          <button
            className="action-card"
            onClick={handleCreateProject}
          >
            <div className="action-icon">‚ûï</div>
            <h3>–ù–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç</h3>
            <p>–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç –ê–ü–°</p>
          </button>

          <button
            className="action-card"
            onClick={() => setActiveSection('calculator')}
          >
            <div className="action-icon">üßÆ</div>
            <h3>–ë—ã—Å—Ç—Ä—ã–π —Ä–∞—Å—á–µ—Ç</h3>
            <p>–†–∞—Å—á–µ—Ç –±–µ–∑ –ø—Ä–æ–µ–∫—Ç–∞</p>
          </button>

          <button
            className="action-card"
            onClick={() => setActiveSection('projects')}
          >
            <div className="action-icon">üìÅ</div>
            <h3>–í—Å–µ –ø—Ä–æ–µ–∫—Ç—ã</h3>
            <p>–ü—Ä–æ—Å–º–æ—Ç—Ä –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</p>
          </button>

          <button
            className="action-card"
            onClick={() => setActiveSection('calculations')}
          >
            <div className="action-icon">üìä</div>
            <h3>–ò—Å—Ç–æ—Ä–∏—è —Ä–∞—Å—á–µ—Ç–æ–≤</h3>
            <p>–ê—Ä—Ö–∏–≤ –∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ</p>
          </button>
        </div>
      </div>

      <div className="recent-activity">
        <h2>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç—ã</h2>
        <div className="recent-projects">
          {projects.slice(0, 3).map(project => (
            <div key={project.id} className="recent-project">
              <div className="project-info">
                <h4>{project.name}</h4>
                <p>{project.object_name}</p>
                <span className="project-status" style={{
                  backgroundColor: getStatusColor(project.status)
                }}>
                  {project.status}
                </span>
              </div>
              <div className="project-actions">
                <button
                  className="btn-sm btn-primary"
                  onClick={() => handleSelectProject(project, 'calculate')}
                >
                  –†–∞—Å—á–µ—Ç
                </button>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  )

  // –†–µ–Ω–¥–µ—Ä –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
  const renderCalculator = () => (
    <div className="calculator-section">
      <div className="section-header">
        <h1>–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ê–ü–°</h1>
        <p>–ë—ã—Å—Ç—Ä—ã–π —Ä–∞—Å—á–µ—Ç –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –ø–æ–∂–∞—Ä–Ω–æ–π —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏–∏</p>
      </div>

      <div className="calculator-options">
        <div className="calc-option">
          <h3>üéØ –ë—ã—Å—Ç—Ä—ã–π —Ä–∞—Å—á–µ—Ç</h3>
          <p>–†–∞—Å—á–µ—Ç –ø–æ –æ—Å–Ω–æ–≤–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º</p>
          <button
            className="btn-primary"
            onClick={() => setShowCalculationWizard(true)}
          >
            –ù–∞—á–∞—Ç—å —Ä–∞—Å—á–µ—Ç
          </button>
        </div>

        <div className="calc-option">
          <h3>üìÅ –†–∞—Å—á–µ—Ç –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞</h3>
          <p>–ü—Ä–∏–≤—è–∑–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –ø—Ä–æ–µ–∫—Ç—É</p>
          <button
            className="btn-secondary"
            onClick={() => setActiveSection('projects')}
          >
            –í—ã–±—Ä–∞—Ç—å –ø—Ä–æ–µ–∫—Ç
          </button>
        </div>
      </div>
    </div>
  )

  // –†–µ–Ω–¥–µ—Ä —Å–ø–∏—Å–∫–∞ —Ä–∞—Å—á–µ—Ç–æ–≤
  const renderCalculations = () => (
    <div className="calculations-section">
      <div className="section-header">
        <h1>–ò—Å—Ç–æ—Ä–∏—è —Ä–∞—Å—á–µ—Ç–æ–≤</h1>
        <p>–í—Å–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ —Ä–∞—Å—á–µ—Ç—ã –ê–ü–°</p>
      </div>

      <div className="calculations-list">
        {calculations.length === 0 ? (
          <div className="empty-state">
            <p>–†–∞—Å—á–µ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
            <button
              className="btn-primary"
              onClick={() => setActiveSection('calculator')}
            >
              –í—ã–ø–æ–ª–Ω–∏—Ç—å –ø–µ—Ä–≤—ã–π —Ä–∞—Å—á–µ—Ç
            </button>
          </div>
        ) : (
          calculations.map(calc => (
            <div key={calc.id} className="calculation-item">
              <div className="calc-info">
                <h4>{calc.aps_projects?.name || '–ë—ã—Å—Ç—Ä—ã–π —Ä–∞—Å—á–µ—Ç'}</h4>
                <p>{calc.aps_projects?.object_name}</p>
                <span className="calc-date">
                  {new Date(calc.calculation_date).toLocaleDateString('ru-RU')}
                </span>
              </div>
              <div className="calc-stats">
                <div className="stat">
                  <span>–ò–∑–≤–µ—â–∞—Ç–µ–ª–∏:</span>
                  <span>{(calc.smoke_detectors_count || 0) + (calc.heat_detectors_count || 0)}</span>
                </div>
                <div className="stat">
                  <span>–°—Ç–æ–∏–º–æ—Å—Ç—å:</span>
                  <span>{formatCurrency(calc.estimated_cost)}</span>
                </div>
              </div>
            </div>
          ))
        )}
      </div>
    </div>
  )

  const getStatusColor = (status) => {
    const colors = {
      '–ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ': '#1677ff',
      '—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ': '#fadb14',
      '–º–æ–Ω—Ç–∞–∂': '#fa8c16',
      '–ø—É—Å–∫–æ_–Ω–∞–ª–∞–¥–∫–∞': '#52c41a',
      '—Å–¥–∞—á–∞': '#722ed1',
      '—ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏—è': '#13c2c2',
      '–∑–∞–≤–µ—Ä—à–µ–Ω': '#52c41a'
    }
    return colors[status] || '#666'
  }

  return (
    <div className="aps-portal">
      {/* –ë–æ–∫–æ–≤–æ–µ –º–µ–Ω—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */}
      <nav className="portal-sidebar">
        <div className="sidebar-header">
          <div className="logo">
            <span className="logo-icon">üî•</span>
            <span className="logo-text">–ê–ü–° –ü–æ—Ä—Ç–∞–ª</span>
          </div>
        </div>

        <div className="sidebar-menu">
          {navigationSections.map(section => (
            <button
              key={section.id}
              className={`menu-item ${activeSection === section.id ? 'active' : ''}`}
              onClick={() => setActiveSection(section.id)}
            >
              <span className="menu-icon">{section.icon}</span>
              <div className="menu-content">
                <span className="menu-title">{section.title}</span>
                <span className="menu-description">{section.description}</span>
              </div>
            </button>
          ))}
        </div>
      </nav>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <main className="portal-main">
        {activeSection === 'dashboard' && renderDashboard()}
        {activeSection === 'projects' && (
          <ProjectList
            onCreateProject={handleCreateProject}
          />
        )}
        {activeSection === 'calculator' && renderCalculator()}
        {activeSection === 'calculations' && renderCalculations()}
        {activeSection === 'reports' && (
          <div className="section-placeholder">
            <h2>üìã –û—Ç—á–µ—Ç—ã –∏ —ç–∫—Å–ø–æ—Ä—Ç</h2>
            <p>–†–∞–∑–¥–µ–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</p>
          </div>
        )}
        {activeSection === 'settings' && (
          <div className="section-placeholder">
            <h2>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏</h2>
            <p>–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–∏—Å—Ç–µ–º—ã</p>
          </div>
        )}
      </main>

      {/* –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ */}
      {showProjectForm && (
        <ProjectForm
          project={editingProject}
          onSave={handleSaveProject}
          onCancel={() => {
            setShowProjectForm(false)
            setEditingProject(null)
          }}
        />
      )}

      {showCalculationWizard && (
        <CalculationWizard
          project={selectedProject}
          onSave={handleSaveCalculation}
          onCancel={() => {
            setShowCalculationWizard(false)
            setSelectedProject(null)
          }}
        />
      )}
    </div>
  )
}

export default APSPortal