import { useState } from 'react'
import './App.css'

function App() {
  // –û—Å–Ω–æ–≤–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–¥–∞–Ω–∏—è
  const [aboveGroundArea, setAboveGroundArea] = useState(5000) // –ù–∞–¥–∑–µ–º–Ω–∞—è —á–∞—Å—Ç—å
  const [undergroundArea, setUndergroundArea] = useState(0) // –ü–æ–¥–∑–µ–º–Ω–∞—è –∞–≤—Ç–æ—Å—Ç–æ—è–Ω–∫–∞
  const [aboveGroundFloors, setAboveGroundFloors] = useState(10) // –≠—Ç–∞–∂–Ω–æ—Å—Ç—å
  const [undergroundFloors, setUndergroundFloors] = useState(0) // –ü–æ–¥–∑–µ–º–Ω—ã–µ —ç—Ç–∞–∂–∏
  const [apartmentsCount, setApartmentsCount] = useState(100) // –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–≤–∞—Ä—Ç–∏—Ä

  // –î–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤—ã–±–æ—Ä –∫–≤–∞—Ä—Ç–∏—Ä –ø–æ –∫–æ–º–Ω–∞—Ç–Ω–æ—Å—Ç–∏
  const [apartment1Room, setApartment1Room] = useState(25) // 1-–∫–æ–º–Ω–∞—Ç–Ω—ã–µ
  const [apartment2Room, setApartment2Room] = useState(50) // 2-–∫–æ–º–Ω–∞—Ç–Ω—ã–µ
  const [apartment3Room, setApartment3Room] = useState(20) // 3-–∫–æ–º–Ω–∞—Ç–Ω—ã–µ
  const [apartment4Room, setApartment4Room] = useState(5) // 4-–∫–æ–º–Ω–∞—Ç–Ω—ã–µ
  const [apartment5Room, setApartment5Room] = useState(0) // 5-–∫–æ–º–Ω–∞—Ç–Ω—ã–µ
  const [apartment6Room, setApartment6Room] = useState(0) // 6-–∫–æ–º–Ω–∞—Ç–Ω—ã–µ
  const [apartment7Room, setApartment7Room] = useState(0) // 7-–∫–æ–º–Ω–∞—Ç–Ω—ã–µ
  const [useDetailedApartments, setUseDetailedApartments] = useState(false) // –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ä–µ–∂–∏–º–∞

  // –î–µ—Ç–∞–ª—å–Ω—ã–π –≤—ã–±–æ—Ä –ø–æ–º–µ—â–µ–Ω–∏–π –ø–æ —Ç–∏–ø–∞–º
  const [useDetailedRooms, setUseDetailedRooms] = useState(false) // –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ –ø–æ–º–µ—â–µ–Ω–∏–π

  // –û–±—â–∏–µ –ø–æ–º–µ—â–µ–Ω–∏—è (—Ä–∞—Å—á–µ—Ç –¥–ª—è 10-—Å–µ–∫—Ü–∏–æ–Ω–Ω–æ–≥–æ –∫–æ–º–ø–ª–µ–∫—Å–∞)
  const [stairwellCount, setStairwellCount] = useState(20) // 2 –ª–µ—Å—Ç–Ω–∏—Ü—ã –Ω–∞ —Å–µ–∫—Ü–∏—é
  const [stairwellArea, setStairwellArea] = useState(15) // –¢–∏–ø–æ–≤–∞—è –ø–ª–æ—â–∞–¥—å –ª–µ—Å—Ç–Ω–∏—á–Ω–æ–π –∫–ª–µ—Ç–∫–∏
  const [elevatorHallCount, setElevatorHallCount] = useState(10) // –ü–æ 1 –ª–∏—Ñ—Ç–æ–≤–æ–º—É —Ö–æ–ª–ª—É –Ω–∞ —Å–µ–∫—Ü–∏—é
  const [elevatorHallArea, setElevatorHallArea] = useState(25) // –¢–∏–ø–æ–≤–∞—è –ø–ª–æ—â–∞–¥—å –ª–∏—Ñ—Ç–æ–≤–æ–≥–æ —Ö–æ–ª–ª–∞
  const [commonCorridorCount, setCommonCorridorCount] = useState(35) // –ö–æ—Ä–∏–¥–æ—Ä—ã –Ω–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–∂–µ
  const [commonCorridorArea, setCommonCorridorArea] = useState(120) // –°—Ä–µ–¥–Ω—è—è –ø–ª–æ—â–∞–¥—å –∫–æ—Ä–∏–¥–æ—Ä–∞

  // –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø–æ–º–µ—â–µ–Ω–∏—è (–ø–æ –¢–ó –º–Ω–æ–≥–æ—Å–µ–∫—Ü–∏–æ–Ω–Ω–æ–≥–æ –∫–æ–º–ø–ª–µ–∫—Å–∞)
  const [techVentilationCount, setTechVentilationCount] = useState(15) // –í–µ–Ω—Ç–∫–∞–º–µ—Ä—ã –¥–ª—è –∫–∞–∂–¥–æ–π —Å–µ–∫—Ü–∏–∏ + –æ–±—â–∏–µ
  const [techVentilationArea, setTechVentilationArea] = useState(35) // –°—Ä–µ–¥–Ω—è—è –ø–ª–æ—â–∞–¥—å –≤–µ–Ω—Ç–∫–∞–º–µ—Ä—ã
  const [techElectricalCount, setTechElectricalCount] = useState(12) // –≠–ª–µ–∫—Ç—Ä–æ—â–∏—Ç–æ–≤—ã–µ —Å–µ–∫—Ü–∏–π
  const [techElectricalArea, setTechElectricalArea] = useState(20) // –ü–ª–æ—â–∞–¥—å —ç–ª–µ–∫—Ç—Ä–æ—â–∏—Ç–æ–≤–æ–π
  const [techHeatingCount, setTechHeatingCount] = useState(8) // –ò–¢–ü –¥–ª—è —Å–µ–∫—Ü–∏–π
  const [techHeatingArea, setTechHeatingArea] = useState(50) // –ü–ª–æ—â–∞–¥—å —Ç–µ–ø–ª–æ–≤–æ–≥–æ –ø—É–Ω–∫—Ç–∞
  const [techPumpingCount, setTechPumpingCount] = useState(4) // –ù–∞—Å–æ—Å–Ω—ã–µ —Å—Ç–∞–Ω—Ü–∏–∏
  const [techPumpingArea, setTechPumpingArea] = useState(30) // –ü–ª–æ—â–∞–¥—å –Ω–∞—Å–æ—Å–Ω–æ–π
  const [techTransformerCount, setTechTransformerCount] = useState(2) // –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ç–æ—Ä–Ω—ã–µ –ø–æ–¥—Å—Ç–∞–Ω—Ü–∏–∏
  const [techTransformerArea, setTechTransformerArea] = useState(80) // –ü–ª–æ—â–∞–¥—å —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ç–æ—Ä–Ω–æ–π
  const [techTelecomCount, setTechTelecomCount] = useState(10) // –°–ª–∞–±–æ—Ç–æ—á–Ω—ã–µ –ø–æ–º–µ—â–µ–Ω–∏—è
  const [techTelecomArea, setTechTelecomArea] = useState(15) // –ü–ª–æ—â–∞–¥—å —Å–ª–∞–±–æ—Ç–æ—á–Ω–æ–π
  const [techWaterCount, setTechWaterCount] = useState(6) // –í–æ–¥–æ–º–µ—Ä–Ω—ã–µ —É–∑–ª—ã
  const [techWaterArea, setTechWaterArea] = useState(25) // –ü–ª–æ—â–∞–¥—å –≤–æ–¥–æ–º–µ—Ä–Ω–æ–≥–æ —É–∑–ª–∞
  const [techFloorCount, setTechFloorCount] = useState(3) // –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —ç—Ç–∞–∂–∏
  const [techFloorArea, setTechFloorArea] = useState(500) // –ü–ª–æ—â–∞–¥—å —Ç–µ—Ö—ç—Ç–∞–∂–∞

  // –•—Ä–∞–Ω–µ–Ω–∏–µ –∏ –ø–∞—Ä–∫–æ–≤–∫–∞ (–ø–æ –¢–ó —Å –ø–æ–¥–∑–µ–º–Ω–æ–π –∞–≤—Ç–æ—Å—Ç–æ—è–Ω–∫–æ–π)
  const [storageCount, setStorageCount] = useState(800) // –ö–ª–∞–¥–æ–≤—ã–µ –¥–ª—è –∂–∏–ª—å—Ü–æ–≤ (–ø–æ 1 –Ω–∞ –∫–≤–∞—Ä—Ç–∏—Ä—É)
  const [storageArea, setStorageArea] = useState(4) // –°—Ä–µ–¥–Ω—è—è –ø–ª–æ—â–∞–¥—å –∫–ª–∞–¥–æ–≤–æ–π
  const [wasteRoomCount, setWasteRoomCount] = useState(11) // –ú—É—Å–æ—Ä–Ω—ã–µ –∫–∞–º–µ—Ä—ã (—Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è + –≤ —Å–µ–∫—Ü–∏—è—Ö)
  const [wasteRoomArea, setWasteRoomArea] = useState(12) // –ü–ª–æ—â–∞–¥—å –º—É—Å–æ—Ä–Ω–æ–π –∫–∞–º–µ—Ä—ã
  const [parkingUndergroundCount, setParkingUndergroundCount] = useState(1) // –û–±—â–∞—è –ø–æ–¥–∑–µ–º–Ω–∞—è –∞–≤—Ç–æ—Å—Ç–æ—è–Ω–∫–∞
  const [parkingUndergroundArea, setParkingUndergroundArea] = useState(8000) // –ü–ª–æ—â–∞–¥—å –ø–æ–¥–∑–µ–º–Ω–æ–π –ø–∞—Ä–∫–æ–≤–∫–∏

  // –û—Ö—Ä–∞–Ω–∞ –∏ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏—è (–¥–ª—è –∫—Ä—É–ø–Ω–æ–≥–æ –ñ–ö)
  const [securityPostCount, setSecurityPostCount] = useState(6) // –ü–æ—Å—Ç—ã –æ—Ö—Ä–∞–Ω—ã –≤ –≤–µ—Å—Ç–∏–±—é–ª—è—Ö
  const [securityPostArea, setSecurityPostArea] = useState(8) // –ü–ª–æ—â–∞–¥—å –ø–æ—Å—Ç–∞ –æ—Ö—Ä–∞–Ω—ã
  const [staffRoomCount, setStaffRoomCount] = useState(4) // –ö–æ–º–Ω–∞—Ç—ã –ø–µ—Ä—Å–æ–Ω–∞–ª–∞/–∫–æ–Ω—Å—å–µ—Ä–∂–µ–π
  const [staffRoomArea, setStaffRoomArea] = useState(12) // –ü–ª–æ—â–∞–¥—å –∫–æ–º–Ω–∞—Ç—ã –ø–µ—Ä—Å–æ–Ω–∞–ª–∞

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã –ê–ü–°
  const [rooms, setRooms] = useState(50) // –û–±—â–∏–µ –ø–æ–º–µ—â–µ–Ω–∏—è (–∫–æ—Ä–∏–¥–æ—Ä—ã, –ª–µ—Å—Ç–Ω–∏—Ü—ã, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ)
  const [height, setHeight] = useState(3.0) // –í—ã—Å–æ—Ç–∞ –ø–æ—Ç–æ–ª–∫–æ–≤
  const [buildingType, setBuildingType] = useState('residential_apartment')
  const [detectorCoverage, setDetectorCoverage] = useState(85) // –°–æ–≥–ª–∞—Å–Ω–æ –°–ü 5.13130.2009
  const [manualCallDistance, setManualCallDistance] = useState(50) // –ù–æ—Ä–º–∞—Ç–∏–≤
  const [sounderCoverage, setSounderCoverage] = useState(15)
  const [cableReserve, setCableReserve] = useState(15) // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∑–∞–ø–∞—Å –∫–∞–±–µ–ª—è
  const [zoneSize, setZoneSize] = useState(300) // –ó–ö–ü–° —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ä–∞–∑–º–µ—Ä

  // –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
  const [results, setResults] = useState(null)
  const [showApartmentsModal, setShowApartmentsModal] = useState(false)
  const [showRoomsModal, setShowRoomsModal] = useState(false)
  const [showAPSSettingsModal, setShowAPSSettingsModal] = useState(false)
  const [activeSection, setActiveSection] = useState('calculator') // –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ—Ä—Ç–∞–ª–∞

  // –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –ø–æ —Ç–∏–ø–∞–º
  const equipmentModels = {
    detectors: {
      name: 'üîç –ü–æ–∂–∞—Ä–Ω—ã–µ –∏–∑–≤–µ—â–∞—Ç–µ–ª–∏',
      models: {
        // –î—ã–º–æ–≤—ã–µ –∏–∑–≤–µ—â–∞—Ç–µ–ª–∏
        'ip212-64-r3': '–ò–ü 212-64-R3 W2.02 Rubezh (–¥—ã–º–æ–≤–æ–π –∞–¥—Ä–µ—Å–Ω—ã–π)',
        'ip212-141': '–ò–ü 212-141 (–¥—ã–º–æ–≤–æ–π –Ω–µ–∞–¥—Ä–µ—Å–Ω—ã–π)',
        'ip212-50m2': '–ò–ü 212-50–ú2 (–¥—ã–º–æ–≤–æ–π —Ä–∞–¥–∏–æ–∫–∞–Ω–∞–ª—å–Ω—ã–π)',
        'ip212-45': '–ò–ü 212-45 "–ü–æ–∂—Ç–µ—Ö–Ω–∏–∫–∞" (–¥—ã–º–æ–≤–æ–π –æ–ø—Ç–∏–∫–æ-—ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π)',
        'ip212-87': '–ò–ü 212-87 "–ê—Ä–≥—É—Å-–°–ø–µ–∫—Ç—Ä" (–¥—ã–º–æ–≤–æ–π –∞–¥—Ä–µ—Å–Ω—ã–π)',
        // –¢–µ–ø–ª–æ–≤—ã–µ –∏–∑–≤–µ—â–∞—Ç–µ–ª–∏
        'ip101-1a-r3': '–ò–ü 101-1–ê-R3 Rubezh (—Ç–µ–ø–ª–æ–≤–æ–π –∞–¥—Ä–µ—Å–Ω—ã–π)',
        'ip101-10': '–ò–ü 101-10 (—Ç–µ–ø–ª–æ–≤–æ–π –Ω–µ–∞–¥—Ä–µ—Å–Ω—ã–π)',
        'ip101-23': '–ò–ü 101-23-–ê1R "–ê—Ä–≥—É—Å-–°–ø–µ–∫—Ç—Ä" (—Ç–µ–ø–ª–æ–≤–æ–π –∞–¥—Ä–µ—Å–Ω—ã–π)',
        'ip101-1a': '–ò–ü 101-1–ê "–ü–æ–∂—Ç–µ—Ö–Ω–∏–∫–∞" (—Ç–µ–ø–ª–æ–≤–æ–π –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π)',
        // –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–∑–≤–µ—â–∞—Ç–µ–ª–∏
        'ip212-50m': '–ò–ü 212-50–ú "–ë–æ–ª–∏–¥" (–¥—ã–º–æ–≤–æ–π+—Ç–µ–ø–ª–æ–≤–æ–π)',
        'ip212-142': '–ò–ü 212-142 (–¥—ã–º–æ–≤–æ–π+—Ç–µ–ø–ª–æ–≤–æ–π –Ω–µ–∞–¥—Ä–µ—Å–Ω—ã–π)'
      }
    },
    controlPanels: {
      name: 'üñ•Ô∏è –ü—Ä–∏–±–æ—Ä—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
      models: {
        // –ü–ü–ö–û–ü —Å–µ—Ä–∏–∏ –†—É–±–µ–∂
        'rubezh-2op': '–ü–ü–ö–û–ü 011249-2-1 "–†—É–±–µ–∂-2–û–ü" –ø—Ä–æ—Ç.R3',
        'rubezh-aars': '–ü–ü–ö–û–ü "–†—É–±–µ–∂-–ê–ê–†–°" (–∞–¥—Ä–µ—Å–Ω–æ-–∞–Ω–∞–ª–æ–≥–æ–≤—ã–π)',
        'rubezh-op-plus': '–ü–ü–ö–û–ü "–†—É–±–µ–∂-–û–ü-–ü–õ–Æ–°" (—Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)',
        // –ë–æ–ª–∏–¥ —Å–µ—Ä–∏—è
        'bolid-c2000': '–°2000-–ö–î–õ (–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–≤—É—Ö–ø—Ä–æ–≤–æ–¥–Ω–æ–π –ª–∏–Ω–∏–∏)',
        'bolid-c2000-4': '–°2000-4 (–ø—Ä–∏–±–æ—Ä –ø—Ä–∏–µ–º–Ω–æ-–∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–π)',
        'bolid-c2000-m': '–°2000-–ú (–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è)',
        // –ê—Ä–≥—É—Å-–°–ø–µ–∫—Ç—Ä
        'argus-as': 'AS-03 "–ê—Ä–≥—É—Å-–°–ø–µ–∫—Ç—Ä" (–∞–¥—Ä–µ—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞)',
        'argus-as-08': 'AS-08 "–ê—Ä–≥—É—Å-–°–ø–µ–∫—Ç—Ä" (8 —à–ª–µ–π—Ñ–æ–≤)',
        // –†–µ–ª–µ–π–Ω—ã–µ –º–æ–¥—É–ª–∏
        'rm-1-r3': '–†–ú-1-R3 (—Ä–µ–ª–µ–π–Ω—ã–π –º–æ–¥—É–ª—å 1 –∫–∞–Ω–∞–ª)',
        'rm-4-r3': '–†–ú-4-R3 (—Ä–µ–ª–µ–π–Ω—ã–π –º–æ–¥—É–ª—å 4 –∫–∞–Ω–∞–ª–∞)',
        'rm-8-r3': '–†–ú-8-R3 (—Ä–µ–ª–µ–π–Ω—ã–π –º–æ–¥—É–ª—å 8 –∫–∞–Ω–∞–ª–æ–≤)',
        // –ú–æ–¥—É–ª–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
        'mio-1-r3': '–ú–ò–û-1-R3 (–º–æ–¥—É–ª—å –≤–≤–æ–¥–∞-–≤—ã–≤–æ–¥–∞)',
        'mi-4-r3': '–ú–ò-4-R3 (–º–æ–¥—É–ª—å –∏–Ω–¥–∏–∫–∞—Ü–∏–∏)',
        'mu-4-r3': '–ú–£-4-R3 (–º–æ–¥—É–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è)'
      }
    },
    manualCallPoints: {
      name: 'üö® –†—É—á–Ω—ã–µ –∏–∑–≤–µ—â–∞—Ç–µ–ª–∏',
      models: {
        // –ê–¥—Ä–µ—Å–Ω—ã–µ –ò–ü–†
        'ipr513-3am-r3': '–ò–ü–† 513-3–ê–ú-R3 Rubezh (–∞–¥—Ä–µ—Å–Ω—ã–π)',
        'ipr513-10a': '–ò–ü–† 513-10–ê "–ê—Ä–≥—É—Å-–°–ø–µ–∫—Ç—Ä" (–∞–¥—Ä–µ—Å–Ω—ã–π)',
        'ipr513-3a': '–ò–ü–† 513-3–ê "–ë–æ–ª–∏–¥" (–∞–¥—Ä–µ—Å–Ω—ã–π)',
        // –ù–µ–∞–¥—Ä–µ—Å–Ω—ã–µ –ò–ü–†
        'ipr513-3m': '–ò–ü–† 513-3–ú (–Ω–µ–∞–¥—Ä–µ—Å–Ω—ã–π)',
        'ipr513-1m': '–ò–ü–† 513-1–ú (–Ω–µ–∞–¥—Ä–µ—Å–Ω—ã–π —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π)',
        'ipr513-2m': '–ò–ü–† 513-2–ú (–Ω–µ–∞–¥—Ä–µ—Å–Ω—ã–π —Å —Å–≤–µ—Ç–æ–≤–æ–π –∏–Ω–¥–∏–∫–∞—Ü–∏–µ–π)',
        // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ò–ü–†
        'ipr-ex': '–ò–ü–†-Ex (–≤–∑—Ä—ã–≤–æ–∑–∞—â–∏—â–µ–Ω–Ω—ã–π)',
        'ipr513-10': '–ò–ü–† 513-10 (–≤–ª–∞–≥–æ–∑–∞—â–∏—â–µ–Ω–Ω—ã–π IP65)',
        'ipr513-11': '–ò–ü–† 513-11 (–º–æ—Ä–æ–∑–æ—Å—Ç–æ–π–∫–∏–π –¥–æ -40¬∞C)',
        'ipr513-marine': '–ò–ü–† 513-–ú–† (–º–æ—Ä—Å–∫–æ–≥–æ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è)'
      }
    },
    sounders: {
      name: 'üì¢ –°–∏—Å—Ç–µ–º–∞ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è',
      models: {
        // –ê–¥—Ä–µ—Å–Ω—ã–µ –æ–ø–æ–≤–µ—â–∞—Ç–µ–ª–∏
        'opop124-r3': '–û–ü–û–ü 124-R3 (—Å–≤–µ—Ç–æ–∑–≤—É–∫–æ–≤–æ–π –∞–¥—Ä–µ—Å–Ω—ã–π)',
        'opop125-r3': '–û–ü–û–ü 125-R3 (—Ä–µ—á–µ–≤–æ–π –∞–¥—Ä–µ—Å–Ω—ã–π)',
        'mayak-12-r3': '–ú–ê–Ø–ö-12-R3 (—Å–≤–µ—Ç–æ–≤–æ–π –∞–¥—Ä–µ—Å–Ω—ã–π)',
        // –°–≤–µ—Ç–æ–≤—ã–µ –æ–ø–æ–≤–µ—â–∞—Ç–µ–ª–∏
        'mayak-24-st': '–ú–ê–Ø–ö-24-–°–¢ (—Å–≤–µ—Ç–æ–≤–æ–π —Å—Ç—Ä–æ–±–æ—Å–∫–æ–ø–∏—á–µ—Å–∫–∏–π)',
        'mayak-12-k': '–ú–ê–Ø–ö-12-–ö (—Å–≤–µ—Ç–æ–≤–æ–π –ø—Ä–æ–±–ª–µ—Å–∫–æ–≤—ã–π)',
        'mayak-220': '–ú–ê–Ø–ö-220 (—Å–≤–µ—Ç–æ–≤–æ–π —Å–µ—Ç–µ–≤–æ–π)',
        'mayak-24-z': '–ú–ê–Ø–ö-24-–ó (–∑—É–º–º–µ—Ä —Å–æ —Å–≤–µ—Ç–æ–≤–æ–π –∏–Ω–¥–∏–∫–∞—Ü–∏–µ–π)',
        // –ó–≤—É–∫–æ–≤—ã–µ –æ–ø–æ–≤–µ—â–∞—Ç–µ–ª–∏
        'ton-3': '–¢–û–ù-3 (–∑–≤—É–∫–æ–≤–æ–π —Å–∏—Ä–µ–Ω–∞)',
        'revun': '–†–ï–í–£–ù (–∑–≤—É–∫–æ–≤–æ–π –º–æ–¥—É–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π)',
        'signal-20': '–°–ò–ì–ù–ê–õ-20 (–∑–≤—É–∫–æ–≤–æ–π –≥—Ä–æ–º–∫–æ–≥–æ–≤–æ—Ä–∏—Ç–µ–ª—å)',
        'gong': '–ì–û–ù–ì (–∑–≤—É–∫–æ–≤–æ–π —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π)',
        // –†–µ—á–µ–≤—ã–µ –æ–ø–æ–≤–µ—â–∞—Ç–µ–ª–∏
        'opop-1': '–û–ü–û–ü-1 (—Ä–µ—á–µ–≤–æ–π –æ–ø–æ–≤–µ—â–∞—Ç–µ–ª—å)',
        'rec-1': '–†–ï–ß-1 (—Ä–µ—á–µ–≤–æ–π –±–ª–æ–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è)',
        'micro-30': '–ú–ò–ö–†–û-30 (–≥—Ä–æ–º–∫–æ–≥–æ–≤–æ—Ä–∏—Ç–µ–ª—å —Ä–µ—á–µ–≤–æ–π)',
        // –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ
        'soue-combo': '–°–û–£–≠-–ö–û–ú–ë–û (—Å–≤–µ—Ç–æ-–∑–≤—É–∫–æ-—Ä–µ—á–µ–≤–æ–π)',
        'alarm-universal': '–°–ò–ì–ù–ê–õ-–£–ù–ò–í–ï–†–°–ê–õ (–Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Å–∏–≥–Ω–∞–ª–∞)'
      }
    },
    powerSupplies: {
      name: 'üîå –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –ø–∏—Ç–∞–Ω–∏—è',
      models: {
        // –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –ø–∏—Ç–∞–Ω–∏—è –†—É–±–µ–∂
        'ivepr-24-r3': '–ò–í–≠–ü–† 24/2,5 RS-R3 Rubezh (–∏—Å—Ç–æ—á–Ω–∏–∫ –ø–∏—Ç–∞–Ω–∏—è)',
        'bip-12-0.5': '–ë–ò–ü-12-0,5 (–±–ª–æ–∫ –ø–∏—Ç–∞–Ω–∏—è 12–í 0,5–ê)',
        'bip-24-1': '–ë–ò–ü-24-1 (–±–ª–æ–∫ –ø–∏—Ç–∞–Ω–∏—è 24–í 1–ê)',
        'bip-24-2': '–ë–ò–ü-24-2 (–±–ª–æ–∫ –ø–∏—Ç–∞–Ω–∏—è 24–í 2–ê)',
        'bip-24-5': '–ë–ò–ü-24-5 (–±–ª–æ–∫ –ø–∏—Ç–∞–Ω–∏—è 24–í 5–ê)',
        // –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –ø–∏—Ç–∞–Ω–∏—è –ë–æ–ª–∏–¥
        'rip-12-rs': '–†–ò–ü-12 –∏—Å–ø.01 (–∏—Å—Ç–æ—á–Ω–∏–∫ –ø–∏—Ç–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–π)',
        'rip-24-rs': '–†–ò–ü-24 –∏—Å–ø.01 (–∏—Å—Ç–æ—á–Ω–∏–∫ –ø–∏—Ç–∞–Ω–∏—è 24–í)',
        'ups-s24-0.5': '–ò–ë–ü-–°24-0,5 (–∏—Å—Ç–æ—á–Ω–∏–∫ –±–µ—Å–ø–µ—Ä–µ–±–æ–π–Ω–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è)',
        // –ê–∫–∫—É–º—É–ª—è—Ç–æ—Ä—ã
        'ups-battery-7ah': '–ê–∫–∫—É–º—É–ª—è—Ç–æ—Ä Delta DTM 12012 (12–í 1.2–ê—á)',
        'ups-battery-17ah': '–ê–∫–∫—É–º—É–ª—è—Ç–æ—Ä Delta DTM 12017 (12–í 1.7–ê—á)',
        'ups-battery-7ah-big': '–ê–∫–∫—É–º—É–ª—è—Ç–æ—Ä Delta DTM 1207 (12–í 7–ê—á)',
        'ups-battery-17ah-big': '–ê–∫–∫—É–º—É–ª—è—Ç–æ—Ä Delta DTM 1217 (12–í 17–ê—á)',
        'ups-battery-40ah': '–ê–∫–∫—É–º—É–ª—è—Ç–æ—Ä Delta GEL 12-40 (12–í 40–ê—á)',
        // –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª–∏
        'dc12-24': '–ü–ù 12/24-1 (–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è)',
        'dc24-12': '–ü–ù 24/12-2 (–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å –æ–±—Ä–∞—Ç–Ω—ã–π)'
      }
    },
    cables: {
      name: 'üîó –ö–∞–±–µ–ª—å–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è',
      models: {
        // –ê–õ–° –∫–∞–±–µ–ª–∏ (–∞–¥—Ä–µ—Å–Ω—ã–µ –ª–∏–Ω–∏–∏ —Å–≤—è–∑–∏)
        'ksrepng-frhf': '–ö–°–†–≠–ü–Ω–≥(–ê)-FRHF 1√ó2√ó0.97–º–º¬≤ (–ê–õ–° –∫–∞–±–µ–ª—å)',
        'ksrepng-frhf-08': '–ö–°–†–≠–ü–Ω–≥(–ê)-FRHF 1√ó2√ó0.8–º–º¬≤ (–ê–õ–° –æ–±–ª–µ–≥—á–µ–Ω–Ω—ã–π)',
        'ksrepng-frhf-12': '–ö–°–†–≠–ü–Ω–≥(–ê)-FRHF 1√ó2√ó1.2–º–º¬≤ (–ê–õ–° —É—Å–∏–ª–µ–Ω–Ω—ã–π)',
        // –°–∏–ª–æ–≤—ã–µ –∫–∞–±–µ–ª–∏
        'kprpng-frhf': '–ö–ü–†–ü–ì–Ω–≥(–ê)-FRHF 3√ó1.5–º–º¬≤ (—Å–∏–ª–æ–≤–æ–π –∫–∞–±–µ–ª—å)',
        'vvgng-ls-3x15': '–í–í–ì–Ω–≥-LS 3√ó1.5–º–º¬≤ (–ø–∏—Ç–∞—é—â–∏–π –∫–∞–±–µ–ª—å)',
        'vvgng-ls-3x25': '–í–í–ì–Ω–≥-LS 3√ó2.5–º–º¬≤ (–ø–∏—Ç–∞—é—â–∏–π —É—Å–∏–ª–µ–Ω–Ω—ã–π)',
        'vvgng-ls-5x25': '–í–í–ì–Ω–≥-LS 5√ó2.5–º–º¬≤ (—Ç—Ä–µ—Ö—Ñ–∞–∑–Ω—ã–π —Å –∑–∞–∑–µ–º–ª–µ–Ω–∏–µ–º)',
        // –ö–∞–±–µ–ª–∏ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è (–°–û–£–≠)
        'kpsng-frhf': '–ö–ü–°–Ω–≥(–ê)-FRHF 1√ó2√ó1.5–º–º¬≤ (–∫–∞–±–µ–ª—å –æ–ø–æ–≤–µ—â–µ–Ω–∏—è)',
        'kpsng-frhf-075': '–ö–ü–°–Ω–≥(–ê)-FRHF 1√ó2√ó0.75–º–º¬≤ (–æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –ª–µ–≥–∫–∏–π)',
        'kpsng-frhf-4x15': '–ö–ü–°–Ω–≥(–ê)-FRHF 4√ó1.5–º–º¬≤ (–º–Ω–æ–≥–æ–∫–∞–Ω–∞–ª—å–Ω–æ–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ)',
        // –í–∏—Ç—ã–µ –ø–∞—Ä—ã –∏ —Å–ª–∞–±–æ—Ç–æ—á–Ω—ã–µ
        'j-y-st-y-2x2x08': 'J-Y(St)Y 2√ó2√ó0.8–º–º¬≤ (–≤–∏—Ç–∞—è –ø–∞—Ä–∞ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è)',
        'utp-cat5e': 'UTP Cat.5e 4√ó2√ó0.5–º–º¬≤ (–≤–∏—Ç–∞—è –ø–∞—Ä–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è)',
        'ftp-cat6': 'FTP Cat.6 4√ó2√ó0.57–º–º¬≤ (–≤–∏—Ç–∞—è –ø–∞—Ä–∞ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è)',
        // –ö–æ–∞–∫—Å–∏–∞–ª—å–Ω—ã–µ –∫–∞–±–µ–ª–∏
        'rg6-frhf': 'RG-6–Ω–≥(–ê)-FRHF (–∫–æ–∞–∫—Å–∏–∞–ª—å–Ω—ã–π 75 –û–º)',
        'rg11-frhf': 'RG-11–Ω–≥(–ê)-FRHF (–∫–æ–∞–∫—Å–∏–∞–ª—å–Ω—ã–π —É—Å–∏–ª–µ–Ω–Ω—ã–π)',
        // –û–ø—Ç–æ–≤–æ–ª–æ–∫–æ–Ω–Ω—ã–µ –∫–∞–±–µ–ª–∏
        'ok-frhf-4': '–û–ö-–ù–†–°–õ–¢–Ω–≥(–ê)-FRHF 4–û–í (–æ–ø—Ç–æ–≤–æ–ª–æ–∫–Ω–æ 4 –∂–∏–ª—ã)',
        'ok-frhf-8': '–û–ö-–ù–†–°–õ–¢–Ω–≥(–ê)-FRHF 8–û–í (–æ–ø—Ç–æ–≤–æ–ª–æ–∫–Ω–æ 8 –∂–∏–ª)'
      }
    },
    mountingMaterials: {
      name: 'üîß –ú–æ–Ω—Ç–∞–∂–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã',
      models: {
        // –ì–æ—Ñ—Ä–æ—Ç—Ä—É–±—ã –∏ –∫–∞–Ω–∞–ª—ã
        'conduit-pvc-16': '–¢—Ä—É–±–∞ –≥–æ—Ñ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ü–í–• d16–º–º (–ª–µ–≥–∫–∞—è —Å–µ—Ä–∏—è)',
        'conduit-pvc-20': '–¢—Ä—É–±–∞ –≥–æ—Ñ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ü–í–• d20–º–º (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è)',
        'conduit-pvc-25': '–¢—Ä—É–±–∞ –≥–æ—Ñ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ü–í–• d25–º–º (—É—Å–∏–ª–µ–Ω–Ω–∞—è)',
        'conduit-pvc-32': '–¢—Ä—É–±–∞ –≥–æ—Ñ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ü–í–• d32–º–º (—Ç—è–∂–µ–ª–∞—è —Å–µ—Ä–∏—è)',
        'cable-channel-25x16': '–ö–∞–±–µ–ª—å-–∫–∞–Ω–∞–ª 25√ó16–º–º (–ø–ª–∞—Å—Ç–∏–∫–æ–≤—ã–π)',
        'cable-channel-40x25': '–ö–∞–±–µ–ª—å-–∫–∞–Ω–∞–ª 40√ó25–º–º (—É—Å–∏–ª–µ–Ω–Ω—ã–π)',
        'cable-channel-60x40': '–ö–∞–±–µ–ª—å-–∫–∞–Ω–∞–ª 60√ó40–º–º (–º–∞–≥–∏—Å—Ç—Ä–∞–ª—å–Ω—ã–π)',
        // –ö—Ä–µ–ø–µ–∂–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è —Ç—Ä—É–±
        'bracket-smo-16-20': '–°–∫–æ–±–∞ –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∞—è –°–ú–û 16-20 (–¥–ª—è d16-20–º–º)',
        'bracket-smo-19-26': '–°–∫–æ–±–∞ –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∞—è –°–ú–û 19-26 (–¥–ª—è d20-25–º–º)',
        'bracket-smo-25-32': '–°–∫–æ–±–∞ –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∞—è –°–ú–û 25-32 (–¥–ª—è d25-32–º–º)',
        'bracket-plastic-20': '–°–∫–æ–±–∞ –ø–ª–∞—Å—Ç–∏–∫–æ–≤–∞—è d20–º–º (–±—ã—Å—Ç—Ä—ã–π –º–æ–Ω—Ç–∞–∂)',
        'bracket-plastic-25': '–°–∫–æ–±–∞ –ø–ª–∞—Å—Ç–∏–∫–æ–≤–∞—è d25–º–º (—É—Å–∏–ª–µ–Ω–Ω–∞—è)',
        // –ê–Ω–∫–µ—Ä–Ω—ã–µ –±–æ–ª—Ç—ã –∏ –¥—é–±–µ–ª–∏
        'anchor-6x60': '–ê–Ω–∫–µ—Ä-–∫–ª–∏–Ω 6√ó60–º–º –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏–π (–¥–ª—è –±–µ—Ç–æ–Ω–∞)',
        'anchor-8x80': '–ê–Ω–∫–µ—Ä-–∫–ª–∏–Ω 8√ó80–º–º —É—Å–∏–ª–µ–Ω–Ω—ã–π (–¥–ª—è —Ç—è–∂–µ–ª—ã—Ö –Ω–∞–≥—Ä—É–∑–æ–∫)',
        'anchor-10x100': '–ê–Ω–∫–µ—Ä-–∫–ª–∏–Ω 10√ó100–º–º —Å–≤–µ—Ä—Ö–ø—Ä–æ—á–Ω—ã–π',
        'dowel-6x40': '–î—é–±–µ–ª—å –ø–ª–∞—Å—Ç–∏–∫–æ–≤—ã–π 6√ó40–º–º (–¥–ª—è –∫–∏—Ä–ø–∏—á–∞)',
        'dowel-8x50': '–î—é–±–µ–ª—å –ø–ª–∞—Å—Ç–∏–∫–æ–≤—ã–π 8√ó50–º–º (—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π)',
        'dowel-nail-6x60': '–î—é–±–µ–ª—å-–≥–≤–æ–∑–¥—å 6√ó60–º–º (–±—ã—Å—Ç—Ä—ã–π –º–æ–Ω—Ç–∞–∂)',
        // –ú–æ–Ω—Ç–∞–∂–Ω—ã–µ –∫–æ—Ä–æ–±–∫–∏ –∏ –±–æ–∫—Å—ã
        'junction-box': '–ö–æ—Ä–æ–±–∫–∞ –º–æ–Ω—Ç–∞–∂–Ω–∞—è –£–ö-2–ü (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è)',
        'junction-box-3p': '–ö–æ—Ä–æ–±–∫–∞ –º–æ–Ω—Ç–∞–∂–Ω–∞—è –£–ö-3–ü (—É–≤–µ–ª–∏—á–µ–Ω–Ω–∞—è)',
        'junction-box-ip65': '–ö–æ—Ä–æ–±–∫–∞ –º–æ–Ω—Ç–∞–∂–Ω–∞—è IP65 (–≤–ª–∞–≥–æ–∑–∞—â–∏—â–µ–Ω–Ω–∞—è)',
        'distribution-box-12': '–ë–æ–∫—Å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç–µ–ª—å–Ω—ã–π –Ω–∞ 12 –º–æ–¥—É–ª–µ–π',
        'distribution-box-24': '–ë–æ–∫—Å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç–µ–ª—å–Ω—ã–π –Ω–∞ 24 –º–æ–¥—É–ª—è',
        'wall-box-detector': '–ö–æ—Ä–æ–±–∫–∞ –Ω–∞—Å—Ç–µ–Ω–Ω–∞—è –¥–ª—è –∏–∑–≤–µ—â–∞—Ç–µ–ª–µ–π',
        // –°—Ç—è–∂–∫–∏ –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—ã –∫–∞–±–µ–ª–µ–π
        'cable-ties': '–°—Ç—è–∂–∫–∏ –∫–∞–±–µ–ª—å–Ω—ã–µ 4.8√ó300–º–º (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ)',
        'cable-ties-heavy': '–°—Ç—è–∂–∫–∏ –∫–∞–±–µ–ª—å–Ω—ã–µ 7.6√ó400–º–º (—É—Å–∏–ª–µ–Ω–Ω—ã–µ)',
        'cable-ties-releasable': '–°—Ç—è–∂–∫–∏ –∫–∞–±–µ–ª—å–Ω—ã–µ –º–Ω–æ–≥–æ—Ä–∞–∑–æ–≤—ã–µ',
        'spiral-wrap-10': '–°–ø–∏—Ä–∞–ª—å–Ω–∞—è –æ–±–º–æ—Ç–∫–∞ d10–º–º (–∑–∞—â–∏—Ç–∞ –∫–∞–±–µ–ª–µ–π)',
        'spiral-wrap-15': '–°–ø–∏—Ä–∞–ª—å–Ω–∞—è –æ–±–º–æ—Ç–∫–∞ d15–º–º (–¥–ª—è –ø—É—á–∫–æ–≤)',
        'cable-holder-adhesive': '–î–µ—Ä–∂–∞—Ç–µ–ª—å –∫–∞–±–µ–ª—è —Å–∞–º–æ–∫–ª–µ—è—â–∏–π—Å—è',
        // –ú–∞—Ä–∫–∏—Ä–æ–≤–∫–∞ –∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
        'cable-marker-set': '–ú–∞—Ä–∫–µ—Ä—ã –∫–∞–±–µ–ª—å–Ω—ã–µ —Å–∞–º–æ–∫–ª–µ—è—â–∏–µ—Å—è (–∫–æ–º–ø–ª–µ–∫—Ç)',
        'label-printer-tape': '–õ–µ–Ω—Ç–∞ –¥–ª—è –ø—Ä–∏–Ω—Ç–µ—Ä–∞ —ç—Ç–∏–∫–µ—Ç–æ–∫ (12–º–º)',
        'identification-sleeve': '–ö–∞–±–µ–ª—å–Ω—ã–µ –º—É—Ñ—Ç—ã –º–∞—Ä–∫–∏—Ä–æ–≤–æ—á–Ω—ã–µ',
        'warning-tape': '–õ–µ–Ω—Ç–∞ —Å–∏–≥–Ω–∞–ª—å–Ω–∞—è ¬´–ö–ê–ë–ï–õ–¨¬ª (–¥–ª—è —É–∫–ª–∞–¥–∫–∏)',
        // –ò–∑–æ–ª—è—Ü–∏–æ–Ω–Ω—ã–µ –∏ –∑–∞—â–∏—Ç–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
        'insulation-tape': '–ò–∑–æ–ª–µ–Ω—Ç–∞ –ü–í–• —á–µ—Ä–Ω–∞—è 19–º–º√ó20–º',
        'heat-shrink-tube': '–¢–µ—Ä–º–æ—É—Å–∞–¥–æ—á–Ω–∞—è —Ç—Ä—É–±–∫–∞ –Ω–∞–±–æ—Ä (—Ä–∞–∑–Ω—ã–µ –¥–∏–∞–º–µ—Ç—Ä—ã)',
        'cable-protection-sleeve': '–ó–∞—â–∏—Ç–Ω–∞—è –æ–ø–ª–µ—Ç–∫–∞ –∫–∞–±–µ–ª—è —Å–∞–º–æ–∑–∞–∫—Ä—ã–≤–∞—é—â–∞—è—Å—è',
        'fireproof-mastic': '–ú–∞—Å—Ç–∏–∫–∞ –æ–≥–Ω–µ–∑–∞—â–∏—Ç–Ω–∞—è –¥–ª—è –∫–∞–±–µ–ª—å–Ω—ã—Ö –ø—Ä–æ—Ö–æ–¥–æ–∫',
        'fireproof-pillow': '–ü–æ–¥—É—à–∫–∏ –æ–≥–Ω–µ–∑–∞—â–∏—Ç–Ω—ã–µ –¥–ª—è –∫–∞–±–µ–ª—å–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤'
      }
    },
    additionalEquipment: {
      name: 'üî¨ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ',
      models: {
        // –ò–∑–æ–ª—è—Ç–æ—Ä—ã –∏ —Å–æ–≥–ª–∞—Å—É—é—â–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
        'isolator-iz-1b-r3': '–ò–∑–æ–ª—è—Ç–æ—Ä —à–ª–µ–π—Ñ–∞ –ò–ó-1–ë-R3 (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ)',
        'isolator-iz-2b-r3': '–ò–∑–æ–ª—è—Ç–æ—Ä —à–ª–µ–π—Ñ–∞ –ò–ó-2–ë-R3 (–¥–≤–æ–π–Ω–æ–π)',
        'terminator-r3': '–¢–µ—Ä–º–∏–Ω–∞—Ç–æ—Ä R3 (–æ–∫–æ–Ω–µ—á–Ω–æ–µ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ –ê–õ–°)',
        'repeater-r3': '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ–ª—å R3 (—É—Å–∏–ª–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–∞ –ê–õ–°)',
        // –ê–¥—Ä–µ—Å–Ω—ã–µ –º–µ—Ç–∫–∏ –∏ –º–æ–¥—É–ª–∏
        'addressable-mark-am1-r3': '–ú–µ—Ç–∫–∞ –∞–¥—Ä–µ—Å–Ω–∞—è –ê–ú-1-R3 (–∫–æ–Ω—Ç—Ä–æ–ª—å —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏)',
        'addressable-mark-am2-r3': '–ú–µ—Ç–∫–∞ –∞–¥—Ä–µ—Å–Ω–∞—è –ê–ú-2-R3 (—Å –∏–Ω–¥–∏–∫–∞—Ü–∏–µ–π)',
        'input-module-vm-r3': '–ú–æ–¥—É–ª—å –≤–≤–æ–¥–∞ –í–ú-R3 (–∫–æ–Ω—Ç—Ä–æ–ª—å —Å—É—Ö–∏—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤)',
        'output-module-um-r3': '–ú–æ–¥—É–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –£–ú-R3 (—Ä–µ–ª–µ –≤—ã—Ö–æ–¥—ã)',
        // GSM –∏ —Å–µ—Ç–µ–≤—ã–µ –º–æ–¥—É–ª–∏
        'gsm-module-r3': 'GSM-–º–æ–¥—É–ª—å R3 (–ø–µ—Ä–µ–¥–∞—á–∞ –Ω–∞ –ø—É–ª—å—Ç –æ—Ö—Ä–∞–Ω—ã)',
        'ethernet-module-r3': 'Ethernet-–º–æ–¥—É–ª—å R3 (—Å–µ—Ç–µ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ)',
        'radio-module-r3': '–†–∞–¥–∏–æ-–º–æ–¥—É–ª—å R3 (–±–µ—Å–ø—Ä–æ–≤–æ–¥–Ω–∞—è —Å–≤—è–∑—å)',
        'wifi-module-r3': 'WiFi-–º–æ–¥—É–ª—å R3 (–±–µ—Å–ø—Ä–æ–≤–æ–¥–Ω–æ–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç)',
        // –ü—É–ª—å—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –∏–Ω–¥–∏–∫–∞—Ü–∏–∏
        'control-panel-pdu-r3': '–ü—É–ª—å—Ç –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ü–î–£-R3',
        'indicator-panel-pi-r3': '–ü—É–ª—å—Ç –∏–Ω–¥–∏–∫–∞—Ü–∏–∏ –ü–ò-R3 (–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π)',
        'mimic-panel-large': '–ú–Ω–µ–º–æ—Å—Ö–µ–º–∞ –æ–±—ä–µ–∫—Ç–∞ (–±–æ–ª—å—à–∞—è –Ω–∞—Å—Ç–µ–Ω–Ω–∞—è)',
        'led-indicator-matrix': '–°–≤–µ—Ç–æ–¥–∏–æ–¥–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞ –∏–Ω–¥–∏–∫–∞—Ü–∏–∏ –∑–æ–Ω',
        // –°–∏—Å—Ç–µ–º—ã –ø–µ—Ä–µ–¥–∞—á–∏ –∏–∑–≤–µ—â–µ–Ω–∏–π
        'radio-channel-r3': '–†–∞–¥–∏–æ–∫–∞–Ω–∞–ª R3 (–ø–µ—Ä–µ–¥–∞—á–∞ –Ω–∞ 40–∫–º)',
        'optic-channel-r3': '–û–ø—Ç–∏—á–µ—Å–∫–∏–π –∫–∞–Ω–∞–ª R3 (–ø–æ –æ–ø—Ç–æ–≤–æ–ª–æ–∫–Ω—É)',
        'pstn-communicator': '–ö–æ–º–º—É–Ω–∏–∫–∞—Ç–æ—Ä PSTN (–ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ–π –ª–∏–Ω–∏–∏)',
        'ip-communicator': 'IP-–∫–æ–º–º—É–Ω–∏–∫–∞—Ç–æ—Ä (–ø–æ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç)',
        // –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∏ –∞–≤–∞—Ä–∏–π–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ
        'ups-1000va': '–ò–ë–ü 1000–í–ê (–¥–ª—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è)',
        'ups-3000va': '–ò–ë–ü 3000–í–ê (–¥–ª—è –∫—Ä—É–ø–Ω—ã—Ö —Å–∏—Å—Ç–µ–º)',
        'generator-interface': '–ú–æ–¥—É–ª—å —Å–æ–ø—Ä—è–∂–µ–Ω–∏—è —Å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–º',
        'voltage-monitor': '–ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è —Å–µ—Ç–∏ (–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ 220–í)',
        // –°–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∂–∞—Ä–æ—Ç—É—à–µ–Ω–∏—è
        'fire-pump-controller': '–ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –ø–æ–∂–∞—Ä–Ω–æ–≥–æ –Ω–∞—Å–æ—Å–∞',
        'smoke-extraction-controller': '–ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥—ã–º–æ—É–¥–∞–ª–µ–Ω–∏—è',
        'fire-damper-controller': '–ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∂–∞—Ä–Ω—ã—Ö –∫–ª–∞–ø–∞–Ω–æ–≤',
        'sprinkler-valve-controller': '–ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä —Å–ø—Ä–∏–Ω–∫–ª–µ—Ä–Ω—ã—Ö –∑–∞–¥–≤–∏–∂–µ–∫'
      }
    }
  }

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—ã–±–æ—Ä–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
  const [selectedEquipmentModels, setSelectedEquipmentModels] = useState(() => {
    const initial = {}
    Object.keys(equipmentModels).forEach(category => {
      Object.keys(equipmentModels[category].models).forEach(model => {
        initial[model] = true // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—Å–µ –º–æ–¥–µ–ª–∏ –≤—ã–±—Ä–∞–Ω—ã
      })
    })
    return initial
  })

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ (—Ä—É—á–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ)
  const [customEquipment, setCustomEquipment] = useState([])

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const selectAllModelsInCategory = (category) => {
    const updated = { ...selectedEquipmentModels }
    Object.keys(equipmentModels[category].models).forEach(model => {
      updated[model] = true
    })
    setSelectedEquipmentModels(updated)
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–º–µ–Ω—ã –≤—ã–±–æ—Ä–∞ –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const deselectAllModelsInCategory = (category) => {
    const updated = { ...selectedEquipmentModels }
    Object.keys(equipmentModels[category].models).forEach(model => {
      updated[model] = false
    })
    setSelectedEquipmentModels(updated)
  }

  // –û–±—â–∞—è –ø–ª–æ—â–∞–¥—å –∑–¥–∞–Ω–∏—è (–Ω–∞–¥–∑–µ–º–Ω–∞—è + –ø–æ–¥–∑–µ–º–Ω–∞—è —á–∞—Å—Ç–∏)
  const totalArea = aboveGroundArea + undergroundArea

  // –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç—Ç–∞–∂–µ–π (–Ω–∞–¥–∑–µ–º–Ω—ã–µ + –ø–æ–¥–∑–µ–º–Ω—ã–µ)
  const totalFloors = aboveGroundFloors + undergroundFloors

  // –†–∞—Å—á–µ—Ç –æ–±—â–∏—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –∫–≤–∞—Ä—Ç–∏—Ä
  const calculatedApartmentsCount = useDetailedApartments
    ? apartment1Room + apartment2Room + apartment3Room + apartment4Room + apartment5Room + apartment6Room + apartment7Room
    : apartmentsCount

  // –°—Ä–µ–¥–Ω—è—è –∫–æ–º–Ω–∞—Ç–Ω–æ—Å—Ç—å –ø—Ä–∏ –¥–µ—Ç–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ
  const averageRoomsPerApartment = useDetailedApartments && calculatedApartmentsCount > 0
    ? (apartment1Room * 1 + apartment2Room * 2 + apartment3Room * 3 + apartment4Room * 4 + apartment5Room * 5 + apartment6Room * 6 + apartment7Room * 7) / calculatedApartmentsCount
    : 2

  // –†–∞—Å—á–µ—Ç –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–º–µ—â–µ–Ω–∏–π –ø—Ä–∏ –¥–µ—Ç–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ
  const calculatedRoomsCount = useDetailedRooms
    ? (stairwellCount * totalFloors) + (elevatorHallCount * totalFloors) + (commonCorridorCount * totalFloors) +
      techVentilationCount + techElectricalCount + techHeatingCount + techPumpingCount + techTransformerCount + techTelecomCount + techWaterCount + techFloorCount +
      storageCount + wasteRoomCount + parkingUndergroundCount +
      securityPostCount + staffRoomCount
    : rooms

  // –†–∞—Å—á–µ—Ç –æ–±—â–µ–π –ø–ª–æ—â–∞–¥–∏ –ø–æ–º–µ—â–µ–Ω–∏–π –ø—Ä–∏ –¥–µ—Ç–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ
  const calculatedRoomsArea = useDetailedRooms
    ? (stairwellArea * stairwellCount * totalFloors) + (elevatorHallArea * elevatorHallCount * totalFloors) + (commonCorridorArea * commonCorridorCount * totalFloors) +
      (techVentilationArea * techVentilationCount) + (techElectricalArea * techElectricalCount) + (techHeatingArea * techHeatingCount) + (techPumpingArea * techPumpingCount) + (techTransformerArea * techTransformerCount) + (techTelecomArea * techTelecomCount) + (techWaterArea * techWaterCount) + (techFloorArea * techFloorCount) +
      (storageArea * storageCount) + (wasteRoomArea * wasteRoomCount) + (parkingUndergroundArea * parkingUndergroundCount) +
      (securityPostArea * securityPostCount) + (staffRoomArea * staffRoomCount)
    : 0

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
  const getSelectedModelsByCategory = (categoryKey) => {
    if (!equipmentModels[categoryKey]) return []
    return Object.entries(equipmentModels[categoryKey].models)
      .filter(([modelKey]) => selectedEquipmentModels[modelKey])
      .map(([modelKey, modelName]) => ({ key: modelKey, name: modelName }))
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –≤—ã–±—Ä–∞–Ω–∞ –ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ –º–æ–¥–µ–ª—å –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const isCategorySelected = (categoryKey) => {
    if (!equipmentModels[categoryKey]) return false
    return Object.keys(equipmentModels[categoryKey].models)
      .some(modelKey => selectedEquipmentModels[modelKey])
  }

  const calculateEquipment = () => {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—â—É—é –ø–ª–æ—â–∞–¥—å –¥–ª—è —Ä–∞—Å—á—ë—Ç–æ–≤
    const area = totalArea

    // –†–∞—Å—á—ë—Ç –∑–æ–Ω –∫–æ–Ω—Ç—Ä–æ–ª—è (–ó–ö–ü–°) - –æ—Å–Ω–æ–≤–∞ –¥–ª—è –≤—Å–µ—Ö —Ä–∞—Å—á—ë—Ç–æ–≤
    const zones = Math.ceil(area / zoneSize)

    // –†–∞—Å—á–µ—Ç –ø–æ–∂–∞—Ä–Ω—ã—Ö –æ—Ç—Å–µ–∫–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–æ—Ä–º–∞—Ç–∏–≤–æ–≤
    const getFireCompartmentSize = (buildingType) => {
      switch(buildingType) {
        case 'residential_apartment': return 2500 // –ñ–∏–ª—ã–µ –¥–æ–º–∞ –¥–æ 2500 –º¬≤ –Ω–∞ –æ—Ç—Å–µ–∫
        case 'office': return 2000 // –û—Ñ–∏—Å–Ω—ã–µ –∑–¥–∞–Ω–∏—è
        case 'warehouse': return 3000 // –°–∫–ª–∞–¥—Å–∫–∏–µ –ø–æ–º–µ—â–µ–Ω–∏—è
        case 'industrial': return 1800 // –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ –∑–¥–∞–Ω–∏—è
        case 'commercial': return 2200 // –¢–æ—Ä–≥–æ–≤—ã–µ –ø–æ–º–µ—â–µ–Ω–∏—è
        case 'parking_underground': return 3000 // –ü–æ–¥–∑–µ–º–Ω—ã–µ –ø–∞—Ä–∫–æ–≤–∫–∏
        default: return 2500
      }
    }

    const compartmentSize = getFireCompartmentSize(buildingType)
    const fireCompartments = Math.max(1, Math.ceil(area / compartmentSize))

    // –†–∞—Å—á—ë—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø–ª–æ—â–∞–¥–∏ –ø–æ–∫—Ä—ã—Ç–∏—è –æ–¥–Ω–∏–º –¥—ã–º–æ–≤—ã–º –∏–∑–≤–µ—â–∞—Ç–µ–ª–µ–º —Å–æ–≥–ª–∞—Å–Ω–æ –°–ü 5.13130.2009
    // –ë–∞–∑–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ 85 –º¬≤ –ø—Ä–∏ –≤—ã—Å–æ—Ç–µ –¥–æ 3.5–º, —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è –ø—Ä–∏ –±–æ–ª—å—à–µ–π –≤—ã—Å–æ—Ç–µ
    const getMaxDetectorCoverage = (ceilingHeight, baseArea = 85) => {
      if (ceilingHeight <= 3.5) {
        return baseArea
      } else if (ceilingHeight <= 6.0) {
        // –ü—Ä–∏ –≤—ã—Å–æ—Ç–µ 3.5-6–º –ø–ª–æ—â–∞–¥—å —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è –ø—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
        return Math.max(baseArea * (3.5 / ceilingHeight), 55)
      } else {
        // –ü—Ä–∏ –≤—ã—Å–æ—Ç–µ —Å–≤—ã—à–µ 6–º - –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –ø–ª–æ—â–∞–¥—å
        return 55
      }
    }

    // –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–ª–æ—â–∞–¥—å –ø–æ–∫—Ä—ã—Ç–∏—è —Å —É—á–µ—Ç–æ–º –≤—ã—Å–æ—Ç—ã –ø–æ–º–µ—â–µ–Ω–∏—è
    const adjustedDetectorCoverage = getMaxDetectorCoverage(height)

    // –†–∞—Å—á—ë—Ç –¥–∞—Ç—á–∏–∫–æ–≤ —Å —É—á—ë—Ç–æ–º –∫–≤–∞—Ä—Ç–∏—Ä –∏ –∫–æ–º–Ω–∞—Ç –¥–ª—è –∂–∏–ª—ã—Ö –∑–¥–∞–Ω–∏–π
    let totalDetectors
    if (buildingType === 'residential_apartment') {
      if (useDetailedRooms) {
        // –î–µ—Ç–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º –ø–æ–º–µ—â–µ–Ω–∏–π: —Ç–æ—á–Ω—ã–π —Ä–∞—Å—á–µ—Ç –ø–æ —Ç–∏–ø–∞–º –ø–æ–º–µ—â–µ–Ω–∏–π
        let detectorsByRoomType = 0

        // –û–±—â–∏–µ –ø–æ–º–µ—â–µ–Ω–∏—è (—É—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç—Ç–∞–∂–µ–π)
        detectorsByRoomType += (stairwellCount * totalFloors)     // –ª–µ—Å—Ç–Ω–∏—á–Ω—ã–µ –∫–ª–µ—Ç–∫–∏ - –¥—ã–º–æ–≤—ã–µ
        detectorsByRoomType += (elevatorHallCount * totalFloors)  // –ª–∏—Ñ—Ç–æ–≤—ã–µ —Ö–æ–ª–ª—ã - –¥—ã–º–æ–≤—ã–µ
        detectorsByRoomType += (commonCorridorCount * totalFloors) // –æ–±—â–∏–µ –∫–æ—Ä–∏–¥–æ—Ä—ã - –¥—ã–º–æ–≤—ã–µ

        // –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø–æ–º–µ—â–µ–Ω–∏—è
        detectorsByRoomType += techVentilationCount // –≤–µ–Ω—Ç–∫–∞–º–µ—Ä—ã
        detectorsByRoomType += techElectricalCount  // —ç–ª–µ–∫—Ç—Ä–æ—â–∏—Ç–æ–≤—ã–µ
        detectorsByRoomType += techHeatingCount     // –ò–¢–ü
        detectorsByRoomType += techPumpingCount     // –Ω–∞—Å–æ—Å–Ω—ã–µ —Å—Ç–∞–Ω—Ü–∏–∏
        detectorsByRoomType += techTransformerCount // —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ç–æ—Ä–Ω—ã–µ
        detectorsByRoomType += techTelecomCount     // —Å–ª–∞–±–æ—Ç–æ—á–Ω—ã–µ
        detectorsByRoomType += techWaterCount       // –≤–æ–¥–æ–º–µ—Ä–Ω—ã–µ —É–∑–ª—ã
        detectorsByRoomType += techFloorCount       // —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —ç—Ç–∞–∂–∏

        // –•—Ä–∞–Ω–µ–Ω–∏–µ –∏ –ø–∞—Ä–∫–æ–≤–∫–∞
        detectorsByRoomType += storageCount           // –∫–ª–∞–¥–æ–≤—ã–µ
        detectorsByRoomType += wasteRoomCount         // –º—É—Å–æ—Ä–Ω—ã–µ –∫–∞–º–µ—Ä—ã
        detectorsByRoomType += parkingUndergroundCount // –ø–æ–¥–∑–µ–º–Ω–∞—è –ø–∞—Ä–∫–æ–≤–∫–∞

        // –û—Ö—Ä–∞–Ω–∞ –∏ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏—è
        detectorsByRoomType += securityPostCount // –ø–æ—Å—Ç—ã –æ—Ö—Ä–∞–Ω—ã
        detectorsByRoomType += staffRoomCount    // –∫–æ–º–Ω–∞—Ç—ã –ø–µ—Ä—Å–æ–Ω–∞–ª–∞

        totalDetectors = detectorsByRoomType

        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ –ø–ª–æ—â–∞–¥–∏ –ø–æ–º–µ—â–µ–Ω–∏–π (–µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–∞)
        if (calculatedRoomsArea > 0) {
          const detectorsByRoomArea = Math.ceil(calculatedRoomsArea / adjustedDetectorCoverage)
          totalDetectors = Math.max(totalDetectors, detectorsByRoomArea)
        }

      } else if (useDetailedApartments) {
        // –î–µ—Ç–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º –∫–≤–∞—Ä—Ç–∏—Ä: —Å—á–∏—Ç–∞–µ–º –¥–∞—Ç—á–∏–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ –∫–≤–∞—Ä—Ç–∏—Ä
        const detectors1Room = apartment1Room * (1 + 2) // –∫–æ–º–Ω–∞—Ç—ã + –∫—É—Ö–Ω—è + –∫–æ—Ä–∏–¥–æ—Ä
        const detectors2Room = apartment2Room * (2 + 2) // –∫–æ–º–Ω–∞—Ç—ã + –∫—É—Ö–Ω—è + –∫–æ—Ä–∏–¥–æ—Ä
        const detectors3Room = apartment3Room * (3 + 2) // –∫–æ–º–Ω–∞—Ç—ã + –∫—É—Ö–Ω—è + –∫–æ—Ä–∏–¥–æ—Ä
        const detectors4Room = apartment4Room * (4 + 2) // –∫–æ–º–Ω–∞—Ç—ã + –∫—É—Ö–Ω—è + –∫–æ—Ä–∏–¥–æ—Ä
        const detectors5Room = apartment5Room * (5 + 2) // –∫–æ–º–Ω–∞—Ç—ã + –∫—É—Ö–Ω—è + –∫–æ—Ä–∏–¥–æ—Ä
        const detectors6Room = apartment6Room * (6 + 2) // –∫–æ–º–Ω–∞—Ç—ã + –∫—É—Ö–Ω—è + –∫–æ—Ä–∏–¥–æ—Ä
        const detectors7Room = apartment7Room * (7 + 2) // –∫–æ–º–Ω–∞—Ç—ã + –∫—É—Ö–Ω—è + –∫–æ—Ä–∏–¥–æ—Ä

        totalDetectors = detectors1Room + detectors2Room + detectors3Room + detectors4Room + detectors5Room + detectors6Room + detectors7Room
      } else {
        // –ü—Ä–æ—Å—Ç–æ–π —Ä–µ–∂–∏–º: –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ä–µ–¥–Ω—é—é –∫–æ–º–Ω–∞—Ç–Ω–æ—Å—Ç—å
        const detectorsPerApartment = averageRoomsPerApartment + 2 // –∫–æ–º–Ω–∞—Ç—ã + –∫—É—Ö–Ω—è + –∫–æ—Ä–∏–¥–æ—Ä
        totalDetectors = calculatedApartmentsCount * detectorsPerApartment
      }

      // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞—Ç—á–∏–∫–∏ –¥–ª—è –æ–±—â–∏—Ö –∑–æ–Ω, –µ—Å–ª–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–µ—Ç–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º –ø–æ–º–µ—â–µ–Ω–∏–π
      if (!useDetailedRooms) {
        // –ù–∞–¥–∑–µ–º–Ω—ã–µ —ç—Ç–∞–∂–∏: 2 –¥–∞—Ç—á–∏–∫–∞ –Ω–∞ —ç—Ç–∞–∂, –ø–æ–¥–∑–µ–º–Ω—ã–µ: 1 –¥–∞—Ç—á–∏–∫ –Ω–∞ —ç—Ç–∞–∂
        const aboveGroundCommonDetectors = Math.ceil(aboveGroundFloors * 2)
        const undergroundCommonDetectors = Math.ceil(undergroundFloors * 1)
        const commonAreaDetectors = aboveGroundCommonDetectors + undergroundCommonDetectors
        totalDetectors += commonAreaDetectors
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–æ—Ä–º–∞—Ç–∏–≤—É –ø–æ –ø–ª–æ—â–∞–¥–∏ (–°–ü 5.13130.2009)
      const detectorsByArea = Math.ceil(area / adjustedDetectorCoverage)
      totalDetectors = Math.max(totalDetectors, detectorsByArea)
    } else {
      // –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ø–æ–º–µ—â–µ–Ω–∏–π - –ø–æ –ø–ª–æ—â–∞–¥–∏ —Å —É—á—ë—Ç–æ–º –≤—ã—Å–æ—Ç—ã –ø–æ—Ç–æ–ª–∫–æ–≤
      totalDetectors = Math.ceil(area / adjustedDetectorCoverage)
    }

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞—Ç—á–∏–∫–∏ –¥–ª—è –ª–µ—Å—Ç–Ω–∏—á–Ω—ã—Ö –∫–ª–µ—Ç–æ–∫ –∏ –ª–∏—Ñ—Ç–æ–≤—ã—Ö —à–∞—Ö—Ç
    let additionalDetectorsForVerticalPaths = 0
    if (buildingType === 'residential_apartment' && aboveGroundFloors > 3) {
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞—Ç—á–∏–∫–∏ –≤ –ª–µ—Å—Ç–Ω–∏—á–Ω—ã—Ö –∫–ª–µ—Ç–∫–∞—Ö –∏ –ª–∏—Ñ—Ç–æ–≤—ã—Ö —à–∞—Ö—Ç–∞—Ö –¥–ª—è –≤—ã—Å–æ—Ç–Ω—ã—Ö –∑–¥–∞–Ω–∏–π
      const stairwells = Math.ceil(aboveGroundArea / 1000) // –ü—Ä–∏–º–µ—Ä–Ω–æ 1 –ª–µ—Å—Ç–Ω–∏—á–Ω–∞—è –∫–ª–µ—Ç–∫–∞ –Ω–∞ 1000 –º¬≤
      const elevators = Math.ceil(aboveGroundArea / 2000) // –ü—Ä–∏–º–µ—Ä–Ω–æ 1 –ª–∏—Ñ—Ç –Ω–∞ 2000 –º¬≤
      additionalDetectorsForVerticalPaths = (stairwells + elevators) * Math.ceil(aboveGroundFloors / 2)
    }

    // –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –¥–ª—è –ø–æ–¥–∑–µ–º–Ω—ã—Ö —ç—Ç–∞–∂–µ–π
    let undergroundDetectors = 0
    if (undergroundArea > 0) {
      // –î–ª—è –ø–æ–¥–∑–µ–º–Ω—ã—Ö —ç—Ç–∞–∂–µ–π –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–≤—ã—à–µ–Ω–Ω—É—é –ø–ª–æ—Ç–Ω–æ—Å—Ç—å –∏–∑-–∑–∞ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π –¥—ã–º–æ—É–¥–∞–ª–µ–Ω–∏—è
      undergroundDetectors = Math.ceil(undergroundArea / 70) // –ë–æ–ª–µ–µ –ø–ª–æ—Ç–Ω–æ–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ
    }

    // –ò—Ç–æ–≥–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–∞—Ç—á–∏–∫–æ–≤ —Å —É—á–µ—Ç–æ–º –≤—Å–µ—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤
    totalDetectors = Math.max(totalDetectors, Math.ceil(area / adjustedDetectorCoverage)) + additionalDetectorsForVerticalPaths + undergroundDetectors

    // –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ —Ç–∏–ø—ã –¥–∞—Ç—á–∏–∫–æ–≤ –ø–æ –ø—Ä–∏–Ω—Ü–∏–ø–∞–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    let smokeDetectors, heatDetectors, algorithmType
    switch(buildingType) {
      // –ñ–∏–ª—ã–µ –ø–æ–º–µ—â–µ–Ω–∏—è
      case 'residential_apartment': {
        if (useDetailedRooms) {
          // –î–µ—Ç–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º –ø–æ–º–µ—â–µ–Ω–∏–π: —Ç–æ—á–Ω–æ–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ç–∏–ø–∞–º
          // –¢–µ–ø–ª–æ–≤—ã–µ –¥–∞—Ç—á–∏–∫–∏ –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –ø–æ–º–µ—â–µ–Ω–∏—è—Ö –∏ –º—É—Å–æ—Ä–Ω—ã—Ö –∫–∞–º–µ—Ä–∞—Ö
          const techHeatDetectors = techVentilationCount + techHeatingCount + techElectricalCount + techPumpingCount + techTransformerCount + techWaterCount
          const wasteHeatDetectors = wasteRoomCount // –º—É—Å–æ—Ä–Ω—ã–µ –∫–∞–º–µ—Ä—ã - —Ç–µ–ø–ª–æ–≤—ã–µ –∏–∑-–∑–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–∞–º–æ–≤–æ–∑–≥–æ—Ä–∞–Ω–∏—è

          heatDetectors = techHeatDetectors + wasteHeatDetectors
          smokeDetectors = totalDetectors - heatDetectors
        } else {
          // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ä–µ–∂–∏–º: –ø–æ 1 —Ç–µ–ø–ª–æ–≤–æ–º—É –Ω–∞ –∫—É—Ö–Ω—é –≤ –∫–≤–∞—Ä—Ç–∏—Ä–µ
          const kitchenHeatDetectors = calculatedApartmentsCount // –ø–æ 1 —Ç–µ–ø–ª–æ–≤–æ–º—É –Ω–∞ –∫—É—Ö–Ω—é
          heatDetectors = kitchenHeatDetectors
          smokeDetectors = totalDetectors - heatDetectors
        }
        algorithmType = 'B (–¥–≤–æ–π–Ω–æ–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–µ ‚â§60—Å)'
        break
      }

      // –•—Ä–∞–Ω–µ–Ω–∏–µ –∏ –ø–∞—Ä–∫–æ–≤–∫–∞
      case 'parking_underground':
        // –ü–æ–¥–∑–µ–º–Ω—ã–π –ø–∞—Ä–∫–∏–Ω–≥ - –æ—Å–æ–±—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –ø–æ –∞–ª–≥–æ—Ä–∏—Ç–º—É –°
        smokeDetectors = Math.ceil(totalDetectors * 0.6)
        heatDetectors = Math.ceil(totalDetectors * 0.4)
        algorithmType = '–° (–¥–≤–∞ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–∞ –ò–ü)'
        break
      case 'storage_individual':
        // –ö–ª–∞–¥–æ–≤—ã–µ - —Å–º–µ—à–∞–Ω–Ω—ã–π —Ç–∏–ø —Å —É—á—ë—Ç–æ–º —Ö—Ä–∞–Ω–∏–º—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
        smokeDetectors = Math.ceil(totalDetectors * 0.7)
        heatDetectors = Math.ceil(totalDetectors * 0.3)
        algorithmType = 'B (–¥–≤–æ–π–Ω–æ–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–µ ‚â§60—Å)'
        break
      case 'waste_room':
        // –ú—É—Å–æ—Ä–æ—Å–±–æ—Ä–Ω–∞—è - –ø–æ–≤—ã—à–µ–Ω–Ω–∞—è –ø–æ–∂–∞—Ä–æ–æ–ø–∞—Å–Ω–æ—Å—Ç—å
        smokeDetectors = Math.ceil(totalDetectors * 0.8)
        heatDetectors = Math.ceil(totalDetectors * 0.2)
        algorithmType = 'B (–¥–≤–æ–π–Ω–æ–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–µ ‚â§60—Å)'
        break

      // –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø–æ–º–µ—â–µ–Ω–∏—è
      case 'tech_ventilation':
      case 'tech_heating':
      case 'tech_pumping':
      case 'tech_water':
      case 'tech_floor':
        // –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø–æ–º–µ—â–µ–Ω–∏—è - –±–æ–ª—å—à–µ —Ç–µ–ø–ª–æ–≤—ã—Ö –∏–∑-–∑–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
        smokeDetectors = Math.ceil(totalDetectors * 0.4)
        heatDetectors = Math.ceil(totalDetectors * 0.6)
        algorithmType = 'B (–¥–≤–æ–π–Ω–æ–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–µ ‚â§60—Å)'
        break
      case 'tech_transformer':
      case 'tech_electrical':
        // –≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–µ –ø–æ–º–µ—â–µ–Ω–∏—è - —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
        smokeDetectors = Math.ceil(totalDetectors * 0.3)
        heatDetectors = Math.ceil(totalDetectors * 0.7)
        algorithmType = 'B (–¥–≤–æ–π–Ω–æ–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–µ ‚â§60—Å)'
        break
      case 'tech_telecom':
        // –°–ª–∞–±–æ—Ç–æ—á–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã - –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ –¥—ã–º–æ–≤—ã–µ
        smokeDetectors = Math.ceil(totalDetectors * 0.9)
        heatDetectors = Math.ceil(totalDetectors * 0.1)
        algorithmType = 'B (–¥–≤–æ–π–Ω–æ–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–µ ‚â§60—Å)'
        break

      // –û—Ö—Ä–∞–Ω–∞ –∏ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏—è
      case 'security_post':
      case 'staff_room':
        // –ü–æ–º–µ—â–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ - –∫–∞–∫ –æ—Ñ–∏—Å–Ω—ã–µ
        smokeDetectors = Math.ceil(totalDetectors * 0.8)
        heatDetectors = Math.ceil(totalDetectors * 0.2)
        algorithmType = 'B (–¥–≤–æ–π–Ω–æ–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–µ ‚â§60—Å)'
        break

      // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ç–∏–ø—ã (–¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
      case 'warehouse':
        smokeDetectors = Math.ceil(totalDetectors * 0.3)
        heatDetectors = Math.ceil(totalDetectors * 0.7)
        algorithmType = 'B (–¥–≤–æ–π–Ω–æ–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–µ ‚â§60—Å)'
        break
      case 'industrial':
        smokeDetectors = Math.ceil(totalDetectors * 0.4)
        heatDetectors = Math.ceil(totalDetectors * 0.6)
        algorithmType = 'B (–¥–≤–æ–π–Ω–æ–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–µ ‚â§60—Å)'
        break
      case 'residential':
        smokeDetectors = Math.ceil(totalDetectors * 0.9)
        heatDetectors = Math.ceil(totalDetectors * 0.1)
        algorithmType = 'B (–¥–≤–æ–π–Ω–æ–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–µ ‚â§60—Å)'
        break
      case 'commercial':
        smokeDetectors = Math.ceil(totalDetectors * 0.85)
        heatDetectors = Math.ceil(totalDetectors * 0.15)
        algorithmType = 'B (–¥–≤–æ–π–Ω–æ–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–µ ‚â§60—Å)'
        break
      default: // office
        smokeDetectors = Math.ceil(totalDetectors * 0.8)
        heatDetectors = Math.ceil(totalDetectors * 0.2)
        algorithmType = 'B (–¥–≤–æ–π–Ω–æ–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–µ ‚â§60—Å)'
        break
    }

    // –†–∞—Å—á—ë—Ç –ü–ü–ö–û–ü R3-–†–£–ë–ï–ñ-2–û–ü –¥–ª—è –º–Ω–æ–≥–æ—Å–µ–∫—Ü–∏–æ–Ω–Ω–æ–≥–æ –∂–∏–ª–æ–≥–æ –∫–æ–º–ø–ª–µ–∫—Å–∞
    // –ü–æ –¢–ó: –≤ –∫–∞–∂–¥–æ–º –ø–æ–∂–∞—Ä–Ω–æ–º –æ—Ç—Å–µ–∫–µ - 1 –ø—Ä–∏–±–æ—Ä "R3-–†—É–±–µ–∂-2–û–ü"
    const maxZonesPerPanel = 500 // –ú–∞–∫—Å–∏–º—É–º –∑–æ–Ω –Ω–∞ –æ–¥–∏–Ω –ø—Ä–∏–±–æ—Ä
    const maxLineLength = 3000 // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –æ–¥–Ω–æ–π –ê–õ–° –≤ –º–µ—Ç—Ä–∞—Ö
    const linesPerPanel = 2 // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ê–õ–° –Ω–∞ –æ–¥–∏–Ω –ø—Ä–∏–±–æ—Ä

    // –î–ª—è –∂–∏–ª–æ–≥–æ –∫–æ–º–ø–ª–µ–∫—Å–∞ –∏–∑ 10 —Å–µ–∫—Ü–∏–π + –ø–æ–¥–∑–µ–º–Ω–∞—è –∞–≤—Ç–æ—Å—Ç–æ—è–Ω–∫–∞
    // –ü–æ –¢–ó: 11 –ø–æ–∂–∞—Ä–Ω—ã—Ö –æ—Ç—Å–µ–∫–æ–≤ —Ç—Ä–µ–±—É—é—Ç 11 –ø—Ä–∏–±–æ—Ä–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    // (fireCompartments —É–∂–µ –æ–±—ä—è–≤–ª–µ–Ω –≤—ã—à–µ)

    // –†–∞—Å—á—ë—Ç –ø–æ –∑–æ–Ω–∞–º —Å —É—á–µ—Ç–æ–º —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –æ–±—ä–µ–∫—Ç–∞
    const panelsByZones = Math.ceil(zones / maxZonesPerPanel)

    // –†–∞—Å—á—ë—Ç –ø–æ –¥–ª–∏–Ω–µ –ª–∏–Ω–∏–π –¥–ª—è –º–Ω–æ–≥–æ—Å–µ–∫—Ü–∏–æ–Ω–Ω–æ–≥–æ –∫–æ–º–ø–ª–µ–∫—Å–∞
    // –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –¥–ª—è —Å–ª–æ–∂–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
    const aboveGroundLineLength = Math.sqrt(aboveGroundArea) * Math.sqrt(aboveGroundFloors) * 2.2 // –°–ª–æ–∂–Ω–∞—è –≥–µ–æ–º–µ—Ç—Ä–∏—è
    const undergroundLineLength = Math.sqrt(undergroundArea) * undergroundFloors * 2.5 // –ü–æ–¥–∑–µ–º–Ω–∞—è –ø–∞—Ä–∫–æ–≤–∫–∞
    const estimatedLineLength = aboveGroundLineLength + undergroundLineLength
    const requiredLines = Math.ceil(estimatedLineLength / maxLineLength)
    const panelsByLineLength = Math.ceil(requiredLines / linesPerPanel)

    // –ò—Ç–æ–≥–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–±–æ—Ä–æ–≤ (–º–∏–Ω–∏–º—É–º –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–æ–∂–∞—Ä–Ω—ã—Ö –æ—Ç—Å–µ–∫–æ–≤)
    const controlPanels = Math.max(fireCompartments, panelsByZones, panelsByLineLength)

    // –†—É—á–Ω—ã–µ –∏–∑–≤–µ—â–∞—Ç–µ–ª–∏ (–∞–ª–≥–æ—Ä–∏—Ç–º –ê - –æ–¥–Ω–æ—Ä–∞–∑–æ–≤–æ–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–µ)
    // –ü–æ –ø–µ—Ä–∏–º–µ—Ç—Ä—É –∑–¥–∞–Ω–∏—è –∏ –≤ –ø–æ–º–µ—â–µ–Ω–∏—è—Ö —Å–æ–≥–ª–∞—Å–Ω–æ –Ω–æ—Ä–º–∞—Ç–∏–≤–∞–º
    const perimeter = 2 * Math.sqrt(area * 2) // –ø—Ä–∏–º–µ—Ä–Ω—ã–π –ø–µ—Ä–∏–º–µ—Ç—Ä –∑–¥–∞–Ω–∏—è
    const roomsForCalculation = useDetailedRooms ? calculatedRoomsCount : rooms
    const manualCallPoints = Math.ceil(perimeter / manualCallDistance) + Math.ceil(roomsForCalculation / 4)

    // –°–∏—Å—Ç–µ–º–∞ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –ø–æ —Ç–∏–ø–∞–º –ø–æ–º–µ—â–µ–Ω–∏–π (–°–û–£–≠)
    let sounderMultiplier, soueType
    switch(buildingType) {
      // –ñ–∏–ª—ã–µ –ø–æ–º–µ—â–µ–Ω–∏—è
      case 'residential_apartment':
        soueType = '3-–π —Ç–∏–ø (–∂–∏–ª—ã–µ —Å–µ–∫—Ü–∏–∏)'
        sounderMultiplier = 1.0 // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –¥–ª—è –∂–∏–ª—ã—Ö –ø–æ–º–µ—â–µ–Ω–∏–π
        break

      // –•—Ä–∞–Ω–µ–Ω–∏–µ –∏ –ø–∞—Ä–∫–æ–≤–∫–∞
      case 'parking_underground':
        soueType = '4-–π —Ç–∏–ø (–ø–∞—Ä–∫–æ–≤–∫–∞)'
        sounderMultiplier = 1.4 // –£–≤–µ–ª–∏—á–µ–Ω–Ω–æ–µ –∏–∑-–∑–∞ –±–æ–ª—å—à–æ–π –ø–ª–æ—â–∞–¥–∏ –∏ –∞–∫—É—Å—Ç–∏–∫–∏
        break
      case 'storage_individual':
        soueType = '2-–π —Ç–∏–ø (–∫–ª–∞–¥–æ–≤—ã–µ)'
        sounderMultiplier = 1.1 // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Å –Ω–µ–±–æ–ª—å—à–∏–º –∑–∞–ø–∞—Å–æ–º
        break
      case 'waste_room':
        soueType = '2-–π —Ç–∏–ø (—Ç–µ—Ö–ø–æ–º–µ—â–µ–Ω–∏—è)'
        sounderMultiplier = 1.2 // –ü–æ–≤—ã—à–µ–Ω–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∏–∑-–∑–∞ –æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        break

      // –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø–æ–º–µ—â–µ–Ω–∏—è
      case 'tech_ventilation':
      case 'tech_heating':
      case 'tech_pumping':
      case 'tech_water':
      case 'tech_floor':
      case 'tech_transformer':
      case 'tech_electrical':
      case 'tech_telecom':
        soueType = '2-–π —Ç–∏–ø (—Ç–µ—Ö–ø–æ–º–µ—â–µ–Ω–∏—è)'
        sounderMultiplier = 1.2 // –£–≤–µ–ª–∏—á–µ–Ω–Ω–æ–µ –∏–∑-–∑–∞ —à—É–º–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
        break

      // –û—Ö—Ä–∞–Ω–∞ –∏ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏—è
      case 'security_post':
      case 'staff_room':
        soueType = '3-–π —Ç–∏–ø (–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ)'
        sounderMultiplier = 1.0 // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –∫–∞–∫ –¥–ª—è –æ—Ñ–∏—Å–æ–≤
        break

      // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ç–∏–ø—ã (–¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
      case 'warehouse':
        soueType = '2-–π —Ç–∏–ø (—Ç–µ—Ö–ø–æ–º–µ—â–µ–Ω–∏—è)'
        sounderMultiplier = 1.2
        break
      case 'industrial':
        soueType = '2-–π —Ç–∏–ø (—Ç–µ—Ö–ø–æ–º–µ—â–µ–Ω–∏—è)'
        sounderMultiplier = 1.3
        break
      case 'residential':
        soueType = '3-–π —Ç–∏–ø (–∂–∏–ª—ã–µ —Å–µ–∫—Ü–∏–∏)'
        sounderMultiplier = 1.0
        break
      case 'commercial':
        soueType = '3-–π —Ç–∏–ø (—Ç–æ—Ä–≥–æ–≤—ã–µ)'
        sounderMultiplier = 1.1
        break
      default: // office
        soueType = '3-–π —Ç–∏–ø (–æ—Ñ–∏—Å–Ω—ã–µ)'
        sounderMultiplier = 1.0
        break
    }

    // –†–∞—Å—á—ë—Ç –æ–ø–æ–≤–µ—â–∞—Ç–µ–ª–µ–π —Å —É—á—ë—Ç–æ–º —É—Ä–æ–≤–Ω—è –∑–≤—É–∫–∞ ‚â•75 –¥–ë–ê, –Ω–æ ‚â§120 –¥–ë–ê
    const sounderArea = Math.PI * Math.pow(sounderCoverage, 2)
    const sounders = Math.ceil((area / sounderArea) * sounderMultiplier)
    const beacons = Math.ceil(sounders * 0.5) // 50% —Å–≤–µ—Ç–æ–≤—ã—Ö –æ–ø–æ–≤–µ—â–∞—Ç–µ–ª–µ–π

    // –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –ø–∏—Ç–∞–Ω–∏—è –ò–í–≠–ü–† 24/2,5 RS-R3 –¥–ª—è –º–Ω–æ–≥–æ—Å–µ–∫—Ü–∏–æ–Ω–Ω–æ–≥–æ –∫–æ–º–ø–ª–µ–∫—Å–∞
    const powerSupplies = controlPanels // –ü–æ –æ–¥–Ω–æ–º—É –∏—Å—Ç–æ—á–Ω–∏–∫—É –Ω–∞ –∫–∞–∂–¥—ã–π –ü–ü–ö–û–ü
    const batteries = powerSupplies * 2 // –ü–æ 2 –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞ Delta DTM 12012 (12–í 1.2–ê—á)

    // –¶–ü–ò–£ "–†—É–±–µ–∂" –∏—Å–ø.02 - –≤–µ—Ä—Ö–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    // –†–∞—Å—á–µ—Ç –¶–ü–ò–£ —Å —É—á–µ—Ç–æ–º —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –æ–±—ä–µ–∫—Ç–∞ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–∂–∞—Ä–Ω—ã—Ö –æ—Ç—Å–µ–∫–æ–≤
    let centralControlUnit = Math.ceil(controlPanels / 16) || 1 // 1 –¶–ü–ò–£ –Ω–∞ –∫–∞–∂–¥—ã–µ 16 –ü–ü–ö–û–ü

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¶–ü–ò–£ –¥–ª—è –∫—Ä—É–ø–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ —Å —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    if (fireCompartments > 8 || area > 15000) {
      centralControlUnit = Math.max(centralControlUnit, 2) // –ú–∏–Ω–∏–º—É–º 2 –¶–ü–ò–£ –¥–ª—è –∫—Ä—É–ø–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
    }

    // –†–µ–ª–µ–π–Ω—ã–µ –º–æ–¥—É–ª–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ª–æ–∂–Ω—ã–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏
    const relayModules = Math.ceil(zones / 8) + controlPanels * 2 // –†–ú-1/–†–ú-4 + –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–ª—è –ª–∏—Ñ—Ç–æ–≤, –ü–î–í, –û–í–ö

    // –ú–æ–Ω—Ç–∞–∂–Ω—ã–µ –∫–æ—Ä–æ–±–∫–∏ - –¥–ª—è –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –Ω–∞ —à–ª–µ–π—Ñ–∞—Ö
    const boxes = Math.ceil((totalDetectors + manualCallPoints + sounders + beacons) / 2)

    // –†–∞—Å—á—ë—Ç –∫–∞–±–µ–ª—è —Å —É—á—ë—Ç–æ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –ê–õ–° R3-–†–£–ë–ï–ñ-2–û–ü
    // –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π –∑–∞–ø–∞—Å –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
    const adjustedCableReserve = fireCompartments > 5 ? cableReserve + 5 : cableReserve
    const cableMultiplier = 1 + (adjustedCableReserve / 100) // –ó–∞–ø–∞—Å –∫–∞–±–µ–ª—è

    // –ö–°–†–≠–ü–Ω–≥(–ê)-FRHF –¥–ª—è –ê–õ–° (–∞–¥—Ä–µ—Å–Ω—ã–µ –ª–∏–Ω–∏–∏ —Å–≤—è–∑–∏)
    // –î–ª–∏–Ω–∞ –ê–õ–° ‚â§ 3000–º –Ω–∞ –ª–∏–Ω–∏—é, 2 –ª–∏–Ω–∏–∏ –Ω–∞ –ø—Ä–∏–±–æ—Ä
    const alsLength = Math.min(estimatedLineLength, maxLineLength * linesPerPanel)

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–∞–±–µ–ª—å –¥–ª—è —Å–≤—è–∑–∏ –º–µ–∂–¥—É –ø–æ–∂–∞—Ä–Ω—ã–º–∏ –æ—Ç—Å–µ–∫–∞–º–∏
    const interCompartmentCable = fireCompartments > 1 ? (fireCompartments - 1) * 50 : 0
    const loopCable = Math.ceil(controlPanels * alsLength * cableMultiplier) + interCompartmentCable

    // –ö–ü–†–ü–ì–Ω–≥(–ê)-FRHF –¥–ª—è –ø–∏—Ç–∞–Ω–∏—è –ø–∞–Ω–µ–ª–µ–π –∏ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –ø–∏—Ç–∞–Ω–∏—è
    const avgPowerRun = Math.sqrt(area) * 0.3 // –°—Ä–µ–¥–Ω—è—è –¥–ª–∏–Ω–∞ –¥–æ —â–∏—Ç–æ–≤—ã—Ö
    const powerCable = Math.ceil(controlPanels * avgPowerRun * cableMultiplier)

    // –ö–ü–°–Ω–≥(–ê)-FRHF –¥–ª—è –ª–∏–Ω–∏–π –æ–ø–æ–≤–µ—â–µ–Ω–∏—è
    const avgSounderRun = Math.sqrt(area) * 0.5 // –î–ª–∏–Ω–∞ –ª–∏–Ω–∏–π –æ–ø–æ–≤–µ—â–µ–Ω–∏—è
    const sounderCable = Math.ceil(sounders * avgSounderRun * 0.7 * cableMultiplier)

    // –†–∞—Å—á–µ—Ç –º–æ–Ω—Ç–∞–∂–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
    const totalCableLength = loopCable + powerCable + sounderCable // –û–±—â–∞—è –¥–ª–∏–Ω–∞ –≤—Å–µ—Ö –∫–∞–±–µ–ª–µ–π
    const conduitLength = Math.ceil(totalCableLength * 0.8) // –ü–í–• —Ç—Ä—É–±–∞ = 80% –æ—Ç –¥–ª–∏–Ω—ã –∫–∞–±–µ–ª—å–Ω—ã—Ö –ª–∏–Ω–∏–π
    const brackets = conduitLength * 3 // 3 —Å–∫–æ–±—ã –Ω–∞ 1 –º–µ—Ç—Ä —Ç—Ä—É–±—ã
    const anchors = conduitLength * 3 // 3 –∞–Ω–∫–µ—Ä–∞ –Ω–∞ 1 –º–µ—Ç—Ä —Ç—Ä—É–±—ã

    // –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    const selectedModels = {
      detectors: getSelectedModelsByCategory('detectors'),
      controlPanels: getSelectedModelsByCategory('controlPanels'),
      manualCallPoints: getSelectedModelsByCategory('manualCallPoints'),
      sounders: getSelectedModelsByCategory('sounders'),
      powerSupplies: getSelectedModelsByCategory('powerSupplies'),
      cables: getSelectedModelsByCategory('cables'),
      mountingMaterials: getSelectedModelsByCategory('mountingMaterials'),
      additionalEquipment: getSelectedModelsByCategory('additionalEquipment')
    }

    // –§–∏–ª—å—Ç—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    const filteredResults = {
      // –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–æ–≤
      smokeDetectors: isCategorySelected('detectors') ? smokeDetectors : 0,
      heatDetectors: isCategorySelected('detectors') ? heatDetectors : 0,
      totalDetectors: isCategorySelected('detectors') ? totalDetectors : 0,
      controlPanels: isCategorySelected('controlPanels') ? controlPanels : 0,
      manualCallPoints: isCategorySelected('manualCallPoints') ? manualCallPoints : 0,
      sounders: isCategorySelected('sounders') ? sounders : 0,
      beacons: isCategorySelected('sounders') ? beacons : 0,
      powerSupplies: isCategorySelected('powerSupplies') ? powerSupplies : 0,
      batteries: isCategorySelected('powerSupplies') ? batteries : 0,
      boxes: Math.ceil((
        (isCategorySelected('detectors') ? totalDetectors : 0) +
        (isCategorySelected('manualCallPoints') ? manualCallPoints : 0) +
        (isCategorySelected('sounders') ? sounders + beacons : 0)
      ) / 2),
      zones,
      loopCable: isCategorySelected('cables') ? loopCable : 0,
      powerCable: isCategorySelected('cables') ? powerCable : 0,
      sounderCable: isCategorySelected('cables') ? sounderCable : 0,
      relayModules: isCategorySelected('controlPanels') ? relayModules : 0,
      algorithmType,
      soueType,
      maxZonesPerPanel,
      alsLength: Math.ceil(alsLength),
      totalCableLength: isCategorySelected('cables') ? totalCableLength : 0,
      conduitLength: isCategorySelected('mountingMaterials') ? conduitLength : 0,
      brackets: isCategorySelected('mountingMaterials') ? brackets : 0,
      anchors: isCategorySelected('mountingMaterials') ? anchors : 0,
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
      aboveGroundArea,
      undergroundArea,
      totalArea,
      adjustedDetectorCoverage,
      useDetailedRooms,
      calculatedRoomsCount,
      calculatedRoomsArea,
      selectedEquipmentModels,
      selectedModels,
      customEquipment,
      // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–∂–∞—Ä–Ω—ã—Ö –æ—Ç—Å–µ–∫–∞—Ö
      fireCompartments,
      centralControlUnit,
      // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—ã–±–æ—Ä–∞
      categoriesSelected: Object.keys(equipmentModels).filter(cat => isCategorySelected(cat)),
      totalModelsSelected: Object.values(selectedEquipmentModels).filter(Boolean).length,
      totalModelsAvailable: Object.keys(selectedEquipmentModels).length
    }

    setResults(filteredResults)
  }

  return (
    <div>
      {/* –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å –ø–æ—Ä—Ç–∞–ª–∞ */}
      <header className="portal-header">
        <nav className="portal-nav">
          <a href="#" className="portal-logo">
            –ü–æ—Ä—Ç–∞–ª –ê–ü–°
          </a>
          <ul className="portal-menu">
            <li><a href="#" onClick={() => setActiveSection('calculator')}>–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä</a></li>
            <li><a href="#" onClick={() => setActiveSection('history')}>–ò—Å—Ç–æ—Ä–∏—è</a></li>
            <li><a href="#" onClick={() => setActiveSection('settings')}>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</a></li>
            <li><a href="#" onClick={() => setActiveSection('help')}>–°–ø—Ä–∞–≤–∫–∞</a></li>
          </ul>
        </nav>
      </header>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–æ—Ä—Ç–∞–ª–∞ */}
      <div className="portal-container">
        {activeSection === 'calculator' && (
          <>
            <h1 className="portal-title">–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –ê–ü–°</h1>
            <p style={{textAlign: 'center', color: 'var(--text-white)', opacity: 0.9, marginBottom: '1rem'}}>
              –†–∞—Å—á—ë—Ç —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø–æ–∂–∞—Ä–Ω–æ–π —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏–∏
            </p>
            <div style={{
              background: 'rgba(255, 107, 53, 0.1)',
              border: '1px solid rgba(255, 107, 53, 0.3)',
              borderRadius: '8px',
              padding: '1rem',
              marginBottom: '2rem',
              textAlign: 'center'
            }}>
              <h4 style={{color: 'var(--accent-orange)', margin: '0 0 0.5rem 0'}}>üî• –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –ê–ü–°</h4>
              <p style={{margin: 0, color: 'var(--text-white)', fontSize: '0.9rem'}}>
                –†–∞—Å—á–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø–æ–∂–∞—Ä–Ω–æ–π —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏–∏<br/>
                –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –°–ü 5.13130.2009 ¬∑ –ì–û–°–¢ –† 53325-2012 ¬∑ –°–∏—Å—Ç–µ–º–∞ R3-–†—É–±–µ–∂
              </p>
            </div>

            {/* –ö–∞—Ä—Ç–æ—á–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –æ–±—ä–µ–∫—Ç–∞ */}
            <div className="portal-card floating">
              <h2 className="portal-subtitle">üè¢ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –º–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∂–∏–ª–æ–≥–æ –∫–æ–º–ø–ª–µ–∫—Å–∞</h2>

              <div className="portal-grid">
                <div className="portal-grid-item">
                  <label>–ü–ª–æ—â–∞–¥—å –Ω–∞–¥–∑–µ–º–Ω–æ–π —á–∞—Å—Ç–∏ (–º¬≤)</label>
                  <input
                    type="number"
                    value={aboveGroundArea}
                    onChange={(e) => setAboveGroundArea(Number(e.target.value))}
                    className="portal-input"
                    placeholder="10 —Å–µ–∫—Ü–∏–π: –∂–∏–ª—ã–µ + –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ + –§–û–ö"
                  />
                  <small style={{color: 'rgba(255,255,255,0.7)', fontSize: '0.8rem', marginTop: '0.5rem', display: 'block'}}>
                    –í–∫–ª—é—á–∞–µ—Ç: –∫–≤–∞—Ä—Ç–∏—Ä—ã, –ü–û–ù, —Ç–æ—Ä–≥–æ–≤–ª—é, —Ä–µ—Å—Ç–æ—Ä–∞–Ω, –§–û–ö
                  </small>
                </div>

                <div className="portal-grid-item">
                  <label>–ü–ª–æ—â–∞–¥—å –ø–æ–¥–∑–µ–º–Ω–æ–π –∞–≤—Ç–æ—Å—Ç–æ—è–Ω–∫–∏ (–º¬≤)</label>
                  <input
                    type="number"
                    value={undergroundArea}
                    onChange={(e) => setUndergroundArea(Number(e.target.value))}
                    className="portal-input"
                    placeholder="–û–±—â–∞—è –ø–æ–¥–∑–µ–º–Ω–∞—è –ø–∞—Ä–∫–æ–≤–∫–∞ + –∫–ª–∞–¥–æ–≤—ã–µ + —Ç–µ—Ö–ø–æ–º–µ—â–µ–Ω–∏—è"
                  />
                  <small style={{color: 'rgba(255,255,255,0.7)', fontSize: '0.8rem', marginTop: '0.5rem', display: 'block'}}>
                    –ü–û ‚Ññ 11: –ø–∞—Ä–∫–∏–Ω–≥, –∫–ª–∞–¥–æ–≤—ã–µ, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ, –º—É—Å–æ—Ä–Ω—ã–µ
                  </small>
                </div>

                <div className="portal-grid-item">
                  <label>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —ç—Ç–∞–∂–Ω–æ—Å—Ç—å —Å–µ–∫—Ü–∏–π</label>
                  <input
                    type="number"
                    value={aboveGroundFloors}
                    onChange={(e) => setAboveGroundFloors(Number(e.target.value))}
                    className="portal-input"
                    min="1"
                  />
                  <small style={{color: 'rgba(255,255,255,0.7)', fontSize: '0.8rem', marginTop: '0.5rem', display: 'block'}}>
                    –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —ç—Ç–∞–∂–Ω–æ—Å—Ç—å –∑–¥–∞–Ω–∏—è
                  </small>
                </div>

                <div className="portal-grid-item">
                  <label>–ü–æ–¥–∑–µ–º–Ω—ã–µ —ç—Ç–∞–∂–∏</label>
                  <input
                    type="number"
                    value={undergroundFloors}
                    onChange={(e) => setUndergroundFloors(Number(e.target.value))}
                    className="portal-input"
                    min="0"
                  />
                  <small style={{color: 'rgba(255,255,255,0.7)', fontSize: '0.8rem', marginTop: '0.5rem', display: 'block'}}>
                    –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–∑–µ–º–Ω—ã—Ö —ç—Ç–∞–∂–µ–π (–ø–∞—Ä–∫–æ–≤–∫–∞, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø–æ–º–µ—â–µ–Ω–∏—è)
                  </small>
                </div>
              </div>

              <div style={{textAlign: 'center', margin: '1.5rem 0', color: 'var(--text-white)', background: 'rgba(255, 107, 53, 0.1)', padding: '1rem', borderRadius: '8px'}}>
                <strong>üè¢ –û–±—â–∞—è –ø–ª–æ—â–∞–¥—å: {totalArea.toLocaleString()} –º¬≤</strong><br/>
                <span style={{fontSize: '0.9rem'}}>
                  –ú–∞–∫—Å. —ç—Ç–∞–∂–Ω–æ—Å—Ç—å: {aboveGroundFloors} —ç—Ç. | –ü–æ–¥–∑–µ–º–Ω—ã—Ö: {undergroundFloors} —ç—Ç. | –ö–≤–∞—Ä—Ç–∏—Ä: {calculatedApartmentsCount}
                </span>
              </div>

              {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–≤–∞—Ä—Ç–∏—Ä */}
              <div className="portal-grid">
                <div className="portal-grid-item">
                  <label>
                    <input
                      type="checkbox"
                      checked={useDetailedApartments}
                      onChange={(e) => setUseDetailedApartments(e.target.checked)}
                      style={{marginRight: '10px'}}
                    />
                    –î–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥—Å—á—ë—Ç –ø–æ —Ç–∏–ø–∞–º –∫–≤–∞—Ä—Ç–∏—Ä
                  </label>
                  {!useDetailedApartments && (
                    <input
                      type="number"
                      value={apartmentsCount}
                      onChange={(e) => setApartmentsCount(Number(e.target.value))}
                      className="portal-input"
                      placeholder="–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–≤–∞—Ä—Ç–∏—Ä"
                      style={{marginTop: '10px'}}
                    />
                  )}
                </div>

                {useDetailedApartments && (
                  <div className="portal-grid-item">
                    <button
                      onClick={() => setShowApartmentsModal(true)}
                      className="portal-button"
                    >
                      –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã ({calculatedApartmentsCount} —à—Ç.)
                    </button>
                  </div>
                )}
              </div>

              {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–º–µ—â–µ–Ω–∏–π */}
              <div className="portal-grid">
                <div className="portal-grid-item">
                  <label>
                    <input
                      type="checkbox"
                      checked={useDetailedRooms}
                      onChange={(e) => setUseDetailedRooms(e.target.checked)}
                      style={{marginRight: '10px'}}
                    />
                    –î–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥—Å—á—ë—Ç –ø–æ —Ç–∏–ø–∞–º –ø–æ–º–µ—â–µ–Ω–∏–π
                  </label>
                  {!useDetailedRooms && (
                    <input
                      type="number"
                      value={rooms}
                      onChange={(e) => setRooms(Number(e.target.value))}
                      className="portal-input"
                      placeholder="–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–º–µ—â–µ–Ω–∏–π"
                      style={{marginTop: '10px'}}
                    />
                  )}
                </div>

                {useDetailedRooms && (
                  <div className="portal-grid-item">
                    <button
                      onClick={() => setShowRoomsModal(true)}
                      className="portal-button"
                    >
                      –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–º–µ—â–µ–Ω–∏—è ({calculatedRoomsCount} —à—Ç.)
                    </button>
                  </div>
                )}
              </div>
            </div>

            {/* –ö–∞—Ä—Ç–æ—á–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–∏—Å—Ç–µ–º—ã */}
            <div className="portal-card">
              <h2 className="portal-subtitle">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã –ê–ü–°</h2>

              <div className="portal-grid">
                <div className="portal-grid-item">
                  <label>–í—ã—Å–æ—Ç–∞ –ø–æ—Ç–æ–ª–∫–æ–≤ (–º)</label>
                  <input
                    type="number"
                    value={height}
                    onChange={(e) => setHeight(Number(e.target.value))}
                    className="portal-input"
                    step="0.1"
                    min="2.0"
                  />
                </div>

                <div className="portal-grid-item">
                  <label>–¢–∏–ø –∑–¥–∞–Ω–∏—è</label>
                  <select
                    value={buildingType}
                    onChange={(e) => setBuildingType(e.target.value)}
                    className="portal-input"
                  >
                    <option value="residential_apartment">–ñ–∏–ª–æ–π –¥–æ–º (–∫–≤–∞—Ä—Ç–∏—Ä—ã)</option>
                    <option value="office">–û—Ñ–∏—Å–Ω–æ–µ –∑–¥–∞–Ω–∏–µ</option>
                    <option value="warehouse">–°–∫–ª–∞–¥—Å–∫–æ–µ –ø–æ–º–µ—â–µ–Ω–∏–µ</option>
                    <option value="industrial">–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–µ –∑–¥–∞–Ω–∏–µ</option>
                    <option value="commercial">–¢–æ—Ä–≥–æ–≤–æ–µ –ø–æ–º–µ—â–µ–Ω–∏–µ</option>
                    <option value="parking_underground">–ü–æ–¥–∑–µ–º–Ω–∞—è –ø–∞—Ä–∫–æ–≤–∫–∞</option>
                  </select>
                </div>

                <div className="portal-grid-item">
                  <button
                    onClick={() => setShowAPSSettingsModal(true)}
                    className="portal-button"
                    style={{
                      background: 'linear-gradient(135deg, #667eea, #764ba2)',
                      color: 'white',
                      border: 'none',
                      padding: '1rem 1.5rem',
                      borderRadius: '8px',
                      cursor: 'pointer',
                      fontSize: '1rem',
                      marginTop: '1.5rem'
                    }}
                  >
                    ‚öôÔ∏è –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ê–ü–°
                  </button>
                </div>
              </div>

              <div style={{textAlign: 'center', marginTop: '2rem'}}>
                <button
                  onClick={calculateEquipment}
                  className="portal-button pulse"
                  style={{fontSize: '1.1em', padding: '1.2rem 3rem'}}
                >
                  üî• –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ
                </button>
              </div>
            </div>

            {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–æ–≤ */}
            {results && (
              <div className="portal-card">
                <h2 className="portal-subtitle">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á—ë—Ç–∞</h2>

                <div className="portal-grid">
                  {/* –ü–æ–∂–∞—Ä–Ω—ã–µ –∏–∑–≤–µ—â–∞—Ç–µ–ª–∏ */}
                  <div className="portal-grid-item portal-glow">
                    <h4 style={{color: 'var(--accent-orange)', marginBottom: '1rem'}}>üîç –ü–æ–∂–∞—Ä–Ω—ã–µ –∏–∑–≤–µ—â–∞—Ç–µ–ª–∏</h4>
                    <div style={{marginBottom: '0.75rem'}}>
                      <p><strong>–ò–ü 212-64-R3 W2.02 Rubezh (–¥—ã–º–æ–≤–æ–π –∞–¥—Ä–µ—Å–Ω—ã–π):</strong> {results.smokeDetectors} —à—Ç.</p>
                      <small style={{color: 'rgba(255,255,255,0.7)', fontSize: '0.85em'}}>
                        ‚Ä¢ –ü–ª–æ—â–∞–¥—å –∫–æ–Ω—Ç—Ä–æ–ª—è: –¥–æ 85 –º¬≤<br/>
                        ‚Ä¢ –ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 0.05-0.2 –¥–ë/–º<br/>
                        ‚Ä¢ –ü–∏—Ç–∞–Ω–∏–µ: 24–í –æ—Ç –ê–õ–°
                      </small>
                    </div>
                    <div style={{marginBottom: '0.75rem'}}>
                      <p><strong>–ò–ü 101-1–ê-R3 Rubezh (—Ç–µ–ø–ª–æ–≤–æ–π –∞–¥—Ä–µ—Å–Ω—ã–π):</strong> {results.heatDetectors} —à—Ç.</p>
                      <small style={{color: 'rgba(255,255,255,0.7)', fontSize: '0.85em'}}>
                        ‚Ä¢ –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è: 57¬∞C¬±5¬∞C<br/>
                        ‚Ä¢ –¢–∏–ø: –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ê1<br/>
                        ‚Ä¢ –ü–∏—Ç–∞–Ω–∏–µ: 24–í –æ—Ç –ê–õ–°
                      </small>
                    </div>
                    <div style={{borderTop: '1px solid rgba(255,255,255,0.2)', paddingTop: '0.75rem'}}>
                      <p><strong>–í—Å–µ–≥–æ –∏–∑–≤–µ—â–∞—Ç–µ–ª–µ–π:</strong> {results.totalDetectors} —à—Ç.</p>
                      <p><strong>–ê–ª–≥–æ—Ä–∏—Ç–º —Ä–∞–±–æ—Ç—ã:</strong> {results.algorithmType}</p>
                    </div>
                  </div>

                  {/* –ü—Ä–∏–±–æ—Ä—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
                  <div className="portal-grid-item portal-glow">
                    <h4 style={{color: 'var(--accent-orange)', marginBottom: '1rem'}}>üñ•Ô∏è –ü—Ä–∏–±–æ—Ä—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</h4>
                    <div style={{marginBottom: '0.75rem'}}>
                      <p><strong>–ü–ü–ö–û–ü 011249-2-1 "–†—É–±–µ–∂-2–û–ü" –ø—Ä–æ—Ç.R3:</strong> {results.controlPanels} —à—Ç.</p>
                      <small style={{color: 'rgba(255,255,255,0.7)', fontSize: '0.85em'}}>
                        ‚Ä¢ –î–æ 500 –ø–æ–∂–∞—Ä–Ω—ã—Ö –∑–æ–Ω<br/>
                        ‚Ä¢ 2 –ê–õ–° √ó 3000–º –∫–∞–∂–¥–∞—è<br/>
                        ‚Ä¢ –ü—Ä–æ—Ç–æ–∫–æ–ª R3 Rubezh<br/>
                        ‚Ä¢ –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ë–ò–ü 24–í/2–ê
                      </small>
                    </div>
                    <div style={{marginBottom: '0.75rem'}}>
                      <p><strong>–†–ú-1/–†–ú-4-R3 (—Ä–µ–ª–µ–π–Ω—ã–µ –º–æ–¥—É–ª–∏):</strong> {results.relayModules} —à—Ç.</p>
                      <small style={{color: 'rgba(255,255,255,0.7)', fontSize: '0.85em'}}>
                        ‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–Ω–µ—à–Ω–∏–º –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ–º<br/>
                        ‚Ä¢ –ö–æ–Ω—Ç–∞–∫—Ç—ã: 250–í/8–ê
                      </small>
                    </div>
                    <div style={{borderTop: '1px solid rgba(255,255,255,0.2)', paddingTop: '0.75rem'}}>
                      <p><strong>–ó–æ–Ω –∫–æ–Ω—Ç—Ä–æ–ª—è:</strong> {results.zones} —à—Ç.</p>
                      <p><strong>–ú–∞–∫—Å. –∑–æ–Ω –Ω–∞ –ø—Ä–∏–±–æ—Ä:</strong> {results.maxZonesPerPanel}</p>
                    </div>
                  </div>

                  {/* –†—É—á–Ω—ã–µ –ø–æ–∂–∞—Ä–Ω—ã–µ –∏–∑–≤–µ—â–∞—Ç–µ–ª–∏ */}
                  <div className="portal-grid-item portal-glow">
                    <h4 style={{color: 'var(--accent-orange)', marginBottom: '1rem'}}>üö® –†—É—á–Ω—ã–µ –∏–∑–≤–µ—â–∞—Ç–µ–ª–∏</h4>
                    <div style={{marginBottom: '0.75rem'}}>
                      <p><strong>–ò–ü–† 513-3–ê–ú-R3 Rubezh:</strong> {results.manualCallPoints} —à—Ç.</p>
                      <small style={{color: 'rgba(255,255,255,0.7)', fontSize: '0.85em'}}>
                        ‚Ä¢ –ê–¥—Ä–µ—Å–Ω—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª R3<br/>
                        ‚Ä¢ –°–∞–º–æ–≤–æ–∑–≤—Ä–∞—Ç –ø–æ—Å–ª–µ —Å–±—Ä–æ—Å–∞<br/>
                        ‚Ä¢ –°—Ç–µ–ø–µ–Ω—å –∑–∞—â–∏—Ç—ã: IP54<br/>
                        ‚Ä¢ –†–∞–∑–º–µ—â–µ–Ω–∏–µ: –Ω–µ –±–æ–ª–µ–µ 50–º –¥—Ä—É–≥ –æ—Ç –¥—Ä—É–≥–∞
                      </small>
                    </div>
                    <div style={{borderTop: '1px solid rgba(255,255,255,0.2)', paddingTop: '0.75rem'}}>
                      <p><strong>–ê–ª–≥–æ—Ä–∏—Ç–º:</strong> A (–æ–¥–Ω–æ—Ä–∞–∑–æ–≤–æ–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–µ)</p>
                      <p><strong>–í—ã—Å–æ—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏:</strong> 1.5–º –æ—Ç –ø–æ–ª–∞</p>
                    </div>
                  </div>

                  {/* –°–∏—Å—Ç–µ–º–∞ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —ç–≤–∞–∫—É–∞—Ü–∏–µ–π */}
                  <div className="portal-grid-item portal-glow">
                    <h4 style={{color: 'var(--accent-orange)', marginBottom: '1rem'}}>üì¢ –°–∏—Å—Ç–µ–º–∞ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è (–°–û–£–≠)</h4>
                    <div style={{marginBottom: '0.75rem'}}>
                      <p><strong>–û–ü–û–ü 124-R3 (—Å–≤–µ—Ç–æ–∑–≤—É–∫–æ–≤–æ–π):</strong> {results.sounders} —à—Ç.</p>
                      <small style={{color: 'rgba(255,255,255,0.7)', fontSize: '0.85em'}}>
                        ‚Ä¢ –ó–≤—É–∫–æ–≤–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ: 75-120 –¥–ë–ê<br/>
                        ‚Ä¢ –°–≤–µ—Ç–æ–≤–∞—è –∏–Ω–¥–∏–∫–∞—Ü–∏—è: –∫—Ä–∞—Å–Ω—ã–π —Å–≤–µ—Ç–æ–¥–∏–æ–¥<br/>
                        ‚Ä¢ –ê–¥—Ä–µ—Å–Ω—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª R3
                      </small>
                    </div>
                    <div style={{marginBottom: '0.75rem'}}>
                      <p><strong>–ú–ê–Ø–ö-24-–°–¢ (—Å–≤–µ—Ç–æ–≤–æ–π):</strong> {results.beacons} —à—Ç.</p>
                      <small style={{color: 'rgba(255,255,255,0.7)', fontSize: '0.85em'}}>
                        ‚Ä¢ –°–≤–µ—Ç–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã: –∫—Ä–∞—Å–Ω—ã–π —Å—Ç—Ä–æ–±–æ—Å–∫–æ–ø<br/>
                        ‚Ä¢ –ü–∏—Ç–∞–Ω–∏–µ: 24–í<br/>
                        ‚Ä¢ –î–ª—è –ª—é–¥–µ–π —Å –Ω–∞—Ä—É—à–µ–Ω–∏–µ–º —Å–ª—É—Ö–∞
                      </small>
                    </div>
                    <div style={{borderTop: '1px solid rgba(255,255,255,0.2)', paddingTop: '0.75rem'}}>
                      <p><strong>–¢–∏–ø –°–û–£–≠:</strong> {results.soueType}</p>
                    </div>
                  </div>

                  {/* –ò—Å—Ç–æ—á–Ω–∏–∫–∏ —ç–ª–µ–∫—Ç—Ä–æ–ø–∏—Ç–∞–Ω–∏—è */}
                  <div className="portal-grid-item portal-glow">
                    <h4 style={{color: 'var(--accent-orange)', marginBottom: '1rem'}}>‚ö° –≠–ª–µ–∫—Ç—Ä–æ–ø–∏—Ç–∞–Ω–∏–µ</h4>
                    <div style={{marginBottom: '0.75rem'}}>
                      <p><strong>–ò–í–≠–ü–† 24/2,5 RS-R3 Rubezh:</strong> {results.powerSupplies} —à—Ç.</p>
                      <small style={{color: 'rgba(255,255,255,0.7)', fontSize: '0.85em'}}>
                        ‚Ä¢ –í—ã—Ö–æ–¥–Ω–æ–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ: 24–í¬±10%<br/>
                        ‚Ä¢ –ù–æ–º–∏–Ω–∞–ª—å–Ω—ã–π —Ç–æ–∫: 2.5–ê<br/>
                        ‚Ä¢ –ó–∞—Ä—è–¥ –ê–ö–ë: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π<br/>
                        ‚Ä¢ –ö–æ–Ω—Ç—Ä–æ–ª—å –ê–ö–ë –∏ —Å–µ—Ç–∏ 220–í
                      </small>
                    </div>
                    <div style={{marginBottom: '0.75rem'}}>
                      <p><strong>–ê–∫–∫—É–º—É–ª—è—Ç–æ—Ä Delta DTM 12012 (12–í 1.2–ê—á):</strong> {results.batteries} —à—Ç.</p>
                      <small style={{color: 'rgba(255,255,255,0.7)', fontSize: '0.85em'}}>
                        ‚Ä¢ –ì–µ—Ä–º–µ—Ç–∏—á–Ω–∞—è –Ω–µ–æ–±—Å–ª—É–∂–∏–≤–∞–µ–º–∞—è –ê–ö–ë<br/>
                        ‚Ä¢ –í—Ä–µ–º—è —Ä–µ–∑–µ—Ä–≤–∞: –¥–æ 12 —á–∞—Å–æ–≤<br/>
                        ‚Ä¢ –°—Ä–æ–∫ —Å–ª—É–∂–±—ã: 3-5 –ª–µ—Ç
                      </small>
                    </div>
                  </div>

                  {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ */}
                  <div className="portal-grid-item portal-glow">
                    <h4 style={{color: 'var(--accent-orange)', marginBottom: '1rem'}}>üîß –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ</h4>
                    <div style={{marginBottom: '0.75rem'}}>
                      <p><strong>–ú–µ—Ç–∫–∞ –∞–¥—Ä–µ—Å–Ω–∞—è –ê–ú-1-R3 Rubezh:</strong> {results.boxes} —à—Ç.</p>
                      <small style={{color: 'rgba(255,255,255,0.7)', fontSize: '0.85em'}}>
                        ‚Ä¢ –ú–æ–Ω—Ç–∞–∂–Ω–∞—è –∫–æ—Ä–æ–±–∫–∞ –¥–ª—è –ê–õ–°<br/>
                        ‚Ä¢ –ê–¥—Ä–µ—Å–Ω—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª R3<br/>
                        ‚Ä¢ –ö–æ–Ω—Ç—Ä–æ–ª—å —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ —à–ª–µ–π—Ñ–∞
                      </small>
                    </div>
                    <div style={{marginBottom: '0.75rem'}}>
                      <p><strong>–ò–∑–æ–ª—è—Ç–æ—Ä —à–ª–µ–π—Ñ–∞ –ò–ó-1–ë-R3:</strong> {Math.ceil(results.zones/2)} —à—Ç.</p>
                      <small style={{color: 'rgba(255,255,255,0.7)', fontSize: '0.85em'}}>
                        ‚Ä¢ –ò–∑–æ–ª—è—Ü–∏—è –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã—Ö —É—á–∞—Å—Ç–∫–æ–≤ –ê–õ–°<br/>
                        ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
                      </small>
                    </div>
                  </div>
                </div>

                {/* –ö–∞–±–µ–ª—å–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è –∏ –º–æ–Ω—Ç–∞–∂–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã */}
                <div className="portal-card" style={{marginTop: '2rem', background: 'rgba(255, 255, 255, 0.05)'}}>
                  <h3 style={{color: 'var(--accent-red)', marginBottom: '1rem'}}>üì° –ö–∞–±–µ–ª—å–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è</h3>
                  <div className="portal-grid">
                    <div className="portal-grid-item">
                      <p><strong>–ö–°–†–≠–ü–Ω–≥(–ê)-FRHF 1√ó2√ó0.97–º–º¬≤ (–ê–õ–°):</strong> {results.loopCable} –º</p>
                      <small style={{color: 'rgba(255,255,255,0.7)', fontSize: '0.85em'}}>
                        ‚Ä¢ –ê–¥—Ä–µ—Å–Ω—ã–µ –ª–∏–Ω–∏–∏ —Å–≤—è–∑–∏ R3-–†–£–ë–ï–ñ<br/>
                        ‚Ä¢ –û–≥–Ω–µ—Å—Ç–æ–π–∫–æ—Å—Ç—å: 180 –º–∏–Ω –ø—Ä–∏ 750¬∞C<br/>
                        ‚Ä¢ –ú–∞–∫—Å. –¥–ª–∏–Ω–∞ –æ–¥–Ω–æ–π –ê–õ–°: {Math.ceil(results.alsLength)} –º<br/>
                        ‚Ä¢ –°–µ—á–µ–Ω–∏–µ: 0.97 –º–º¬≤ (—ç–∫—Ä–∞–Ω + 2 –∂–∏–ª—ã)
                      </small>
                    </div>
                    <div className="portal-grid-item">
                      <p><strong>–ö–ü–†–ü–ì–Ω–≥(–ê)-FRHF 3√ó1.50–º–º¬≤ (–ø–∏—Ç–∞–Ω–∏–µ):</strong> {results.powerCable} –º</p>
                      <small style={{color: 'rgba(255,255,255,0.7)', fontSize: '0.85em'}}>
                        ‚Ä¢ –ü–∏—Ç–∞–Ω–∏–µ –ø—Ä–∏–±–æ—Ä–æ–≤ 220–í AC<br/>
                        ‚Ä¢ –û–≥–Ω–µ—Å—Ç–æ–π–∫–æ—Å—Ç—å: 180 –º–∏–Ω –ø—Ä–∏ 750¬∞C<br/>
                        ‚Ä¢ –ù–æ–º–∏–Ω–∞–ª—å–Ω–æ–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ: 660–í<br/>
                        ‚Ä¢ 3 –∂–∏–ª—ã (L, N, PE)
                      </small>
                    </div>
                    <div className="portal-grid-item">
                      <p><strong>–ö–ü–°–Ω–≥(–ê)-FRHF 1√ó2√ó1.5–º–º¬≤ (–æ–ø–æ–≤–µ—â–µ–Ω–∏–µ):</strong> {results.sounderCable} –º</p>
                      <small style={{color: 'rgba(255,255,255,0.7)', fontSize: '0.85em'}}>
                        ‚Ä¢ –õ–∏–Ω–∏–∏ –æ–ø–æ–≤–µ—â–∞—Ç–µ–ª–µ–π –°–û–£–≠<br/>
                        ‚Ä¢ –û–≥–Ω–µ—Å—Ç–æ–π–∫–æ—Å—Ç—å: 180 –º–∏–Ω –ø—Ä–∏ 750¬∞C<br/>
                        ‚Ä¢ –†–∞–±–æ—á–µ–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ: 24–í DC<br/>
                        ‚Ä¢ 2 –∂–∏–ª—ã + —ç–∫—Ä–∞–Ω
                      </small>
                    </div>
                  </div>
                </div>

                {/* –ú–æ–Ω—Ç–∞–∂–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã */}
                <div className="portal-card" style={{marginTop: '2rem', background: 'rgba(255, 255, 255, 0.05)'}}>
                  <h3 style={{color: 'var(--accent-red)', marginBottom: '1rem'}}>üîß –ú–æ–Ω—Ç–∞–∂–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã</h3>
                  <div className="portal-grid">
                    <div className="portal-grid-item">
                      <p><strong>–û–±—â–∞—è –¥–ª–∏–Ω–∞ –∫–∞–±–µ–ª–µ–π:</strong> {results.totalCableLength} –º</p>
                      <small style={{color: 'rgba(255,255,255,0.7)', fontSize: '0.85em'}}>
                        ‚Ä¢ –ê–õ–°: {results.loopCable} –º<br/>
                        ‚Ä¢ –ü–∏—Ç–∞–Ω–∏–µ: {results.powerCable} –º<br/>
                        ‚Ä¢ –û–ø–æ–≤–µ—â–µ–Ω–∏–µ: {results.sounderCable} –º
                      </small>
                    </div>
                    <div className="portal-grid-item">
                      <p><strong>–¢—Ä—É–±–∞ –≥–æ—Ñ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ü–í–• d20–º–º:</strong> {results.conduitLength} –º</p>
                      <small style={{color: 'rgba(255,255,255,0.7)', fontSize: '0.85em'}}>
                        ‚Ä¢ –ó–∞—â–∏—Ç–∞ –∫–∞–±–µ–ª–µ–π –ø—Ä–∏ —Å–∫—Ä—ã—Ç–æ–π –ø—Ä–æ–∫–ª–∞–¥–∫–µ<br/>
                        ‚Ä¢ –î–∏–∞–º–µ—Ç—Ä: 20–º–º (16–º–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π)<br/>
                        ‚Ä¢ –ú–∞—Ç–µ—Ä–∏–∞–ª: –ü–í–•, —Å–∞–º–æ–∑–∞—Ç—É—Ö–∞—é—â–∏–π<br/>
                        ‚Ä¢ –†–∞—Å—á–µ—Ç: 80% –æ—Ç –æ–±—â–µ–π –¥–ª–∏–Ω—ã –∫–∞–±–µ–ª–µ–π
                      </small>
                    </div>
                    <div className="portal-grid-item">
                      <p><strong>–°–∫–æ–±–∞ –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∞—è –°–ú–û 19-26:</strong> {results.brackets} —à—Ç.</p>
                      <small style={{color: 'rgba(255,255,255,0.7)', fontSize: '0.85em'}}>
                        ‚Ä¢ –ö—Ä–µ–ø–ª–µ–Ω–∏–µ –≥–æ—Ñ—Ä–æ—Ç—Ä—É–±—ã –∫ –æ—Å–Ω–æ–≤–∞–Ω–∏—é<br/>
                        ‚Ä¢ –î–∏–∞–º–µ—Ç—Ä –∑–∞–∂–∏–º–∞: 19-26–º–º<br/>
                        ‚Ä¢ –ú–∞—Ç–µ—Ä–∏–∞–ª: –æ—Ü–∏–Ω–∫–æ–≤–∞–Ω–Ω–∞—è —Å—Ç–∞–ª—å<br/>
                        ‚Ä¢ –ù–æ—Ä–º–∞: 3 —Å–∫–æ–±—ã –Ω–∞ 1 –º–µ—Ç—Ä —Ç—Ä—É–±—ã
                      </small>
                    </div>
                    <div className="portal-grid-item">
                      <p><strong>–ê–Ω–∫–µ—Ä-–∫–ª–∏–Ω 6√ó60–º–º –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏–π:</strong> {results.anchors} —à—Ç.</p>
                      <small style={{color: 'rgba(255,255,255,0.7)', fontSize: '0.85em'}}>
                        ‚Ä¢ –ö—Ä–µ–ø–ª–µ–Ω–∏–µ –∫ –±–µ—Ç–æ–Ω–Ω—ã–º –æ—Å–Ω–æ–≤–∞–Ω–∏—è–º<br/>
                        ‚Ä¢ –î–∏–∞–º–µ—Ç—Ä: 6–º–º, –¥–ª–∏–Ω–∞: 60–º–º<br/>
                        ‚Ä¢ –ù–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ –≤—ã—Ä—ã–≤: –¥–æ 1.2 –∫–ù<br/>
                        ‚Ä¢ –ù–æ—Ä–º–∞: 3 –∞–Ω–∫–µ—Ä–∞ –Ω–∞ 1 –º–µ—Ç—Ä —Ç—Ä—É–±—ã
                      </small>
                    </div>
                  </div>
                </div>
                {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                {results.customEquipment.length > 0 && (
                  <div className="portal-card" style={{marginTop: '2rem', background: 'rgba(138, 43, 226, 0.1)', border: '1px solid rgba(138, 43, 226, 0.3)'}}>
                    <h3 style={{color: '#ba68c8', marginBottom: '1rem'}}>üõ†Ô∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ (—Ä—É—á–Ω–æ–µ)</h3>
                    <div className="portal-grid">
                      {results.customEquipment.map((item, index) => (
                        <div key={index} className="portal-grid-item">
                          <p><strong>{item.name}:</strong> {item.quantity} {item.unit}</p>
                        </div>
                      ))}
                    </div>
                  </div>
                )}
              </div>
            )}
          </>
        )}

        {/* –î—Ä—É–≥–∏–µ —Å–µ–∫—Ü–∏–∏ –ø–æ—Ä—Ç–∞–ª–∞ */}
        {activeSection === 'history' && (
          <div className="portal-card">
            <h2 className="portal-subtitle">–ò—Å—Ç–æ—Ä–∏—è —Ä–∞—Å—á–µ—Ç–æ–≤</h2>
            <p style={{color: 'var(--text-white)', textAlign: 'center', padding: '2rem'}}>
              –ò—Å—Ç–æ—Ä–∏—è —Ä–∞—Å—á–µ—Ç–æ–≤ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö –ø–æ—Ä—Ç–∞–ª–∞.
            </p>
          </div>
        )}

        {activeSection === 'settings' && (
          <div className="portal-card">
            <h2 className="portal-subtitle">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ—Ä—Ç–∞–ª–∞</h2>
            <p style={{color: 'var(--text-white)', textAlign: 'center', padding: '2rem'}}>
              –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ—Ä—Ç–∞–ª–∞ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö.
            </p>
          </div>
        )}

        {activeSection === 'help' && (
          <div className="portal-card">
            <h2 className="portal-subtitle">–°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
            <div style={{color: 'var(--text-white)', padding: '1rem'}}>
              <h4>–ù–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã:</h4>
              <ul>
                <li>–°–ü 5.13130.2009 "–°–∏—Å—Ç–µ–º—ã –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∂–∞—Ä–Ω–æ–π –∑–∞—â–∏—Ç—ã"</li>
                <li>–ì–û–°–¢ –† 53325-2012 "–¢–µ—Ö–Ω–∏–∫–∞ –ø–æ–∂–∞—Ä–Ω–∞—è"</li>
                <li>–ù–ü–ë 88-2001* "–£—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–æ–∂–∞—Ä–æ—Ç—É—à–µ–Ω–∏—è –∏ —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏–∏"</li>
              </ul>
            </div>
          </div>
        )}
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–≤–∞—Ä—Ç–∏—Ä */}
      {showApartmentsModal && (
        <div className={`portal-modal ${showApartmentsModal ? 'active' : ''}`}>
          <div className="portal-modal-content">
            <h3 style={{color: 'var(--text-white)', marginBottom: '1.5rem'}}>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–≤–∞—Ä—Ç–∏—Ä –ø–æ –∫–æ–º–Ω–∞—Ç–Ω–æ—Å—Ç–∏</h3>

            <div className="portal-grid">
              <div className="portal-grid-item">
                <label>1-–∫–æ–º–Ω–∞—Ç–Ω—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã</label>
                <input
                  type="number"
                  value={apartment1Room}
                  onChange={(e) => setApartment1Room(Number(e.target.value))}
                  className="portal-input"
                  min="0"
                />
              </div>
              <div className="portal-grid-item">
                <label>2-–∫–æ–º–Ω–∞—Ç–Ω—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã</label>
                <input
                  type="number"
                  value={apartment2Room}
                  onChange={(e) => setApartment2Room(Number(e.target.value))}
                  className="portal-input"
                  min="0"
                />
              </div>
              <div className="portal-grid-item">
                <label>3-–∫–æ–º–Ω–∞—Ç–Ω—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã</label>
                <input
                  type="number"
                  value={apartment3Room}
                  onChange={(e) => setApartment3Room(Number(e.target.value))}
                  className="portal-input"
                  min="0"
                />
              </div>
              <div className="portal-grid-item">
                <label>4-–∫–æ–º–Ω–∞—Ç–Ω—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã</label>
                <input
                  type="number"
                  value={apartment4Room}
                  onChange={(e) => setApartment4Room(Number(e.target.value))}
                  className="portal-input"
                  min="0"
                />
              </div>
              <div className="portal-grid-item">
                <label>5-–∫–æ–º–Ω–∞—Ç–Ω—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã</label>
                <input
                  type="number"
                  value={apartment5Room}
                  onChange={(e) => setApartment5Room(Number(e.target.value))}
                  className="portal-input"
                  min="0"
                />
              </div>
              <div className="portal-grid-item">
                <label>6-–∫–æ–º–Ω–∞—Ç–Ω—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã</label>
                <input
                  type="number"
                  value={apartment6Room}
                  onChange={(e) => setApartment6Room(Number(e.target.value))}
                  className="portal-input"
                  min="0"
                />
              </div>
              <div className="portal-grid-item">
                <label>7-–∫–æ–º–Ω–∞—Ç–Ω—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã</label>
                <input
                  type="number"
                  value={apartment7Room}
                  onChange={(e) => setApartment7Room(Number(e.target.value))}
                  className="portal-input"
                  min="0"
                />
              </div>
            </div>

            <div style={{textAlign: 'center', marginTop: '2rem', color: 'var(--text-white)'}}>
              <p><strong>–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–≤–∞—Ä—Ç–∏—Ä: {calculatedApartmentsCount}</strong></p>
              {calculatedApartmentsCount > 0 && (
                <p>–°—Ä–µ–¥–Ω—è—è –∫–æ–º–Ω–∞—Ç–Ω–æ—Å—Ç—å: {averageRoomsPerApartment.toFixed(1)} –∫–æ–º–Ω–∞—Ç</p>
              )}
            </div>

            <div style={{textAlign: 'center', marginTop: '2rem'}}>
              <button
                onClick={() => setShowApartmentsModal(false)}
                className="portal-button"
              >
                ‚úÖ –ü—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
              </button>
            </div>
          </div>
        </div>
      )}

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–º–µ—â–µ–Ω–∏–π */}
      {showRoomsModal && (
        <div className={`portal-modal ${showRoomsModal ? 'active' : ''}`}>
          <div className="portal-modal-content">
            <h3 style={{color: 'var(--text-white)', marginBottom: '1.5rem'}}>–î–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥—Å—á—ë—Ç –ø–æ–º–µ—â–µ–Ω–∏–π</h3>

            <div style={{maxHeight: '60vh', overflowY: 'auto'}}>
              {/* –û–±—â–∏–µ –ø–æ–º–µ—â–µ–Ω–∏—è */}
              <h4 style={{color: 'var(--accent-orange)', marginTop: '1.5rem'}}>–û–±—â–∏–µ –ø–æ–º–µ—â–µ–Ω–∏—è</h4>
              <div className="portal-grid">
                <div className="portal-grid-item">
                  <label>–õ–µ—Å—Ç–Ω–∏—á–Ω—ã–µ –∫–ª–µ—Ç–∫–∏ –Ω–∞ 1 —ç—Ç–∞–∂–µ</label>
                  <input
                    type="number"
                    value={stairwellCount}
                    onChange={(e) => setStairwellCount(Number(e.target.value))}
                    className="portal-input"
                    min="0"
                  />
                  <label style={{marginTop: '0.5rem'}}>–ü–ª–æ—â–∞–¥—å 1 –ª–µ—Å—Ç–Ω–∏—á–Ω–æ–π –∫–ª–µ—Ç–∫–∏ (–º¬≤)</label>
                  <input
                    type="number"
                    value={stairwellArea}
                    onChange={(e) => setStairwellArea(Number(e.target.value))}
                    className="portal-input"
                    min="0"
                    step="0.1"
                  />
                </div>
                <div className="portal-grid-item">
                  <label>–õ–∏—Ñ—Ç–æ–≤—ã–µ —Ö–æ–ª–ª—ã –Ω–∞ 1 —ç—Ç–∞–∂–µ</label>
                  <input
                    type="number"
                    value={elevatorHallCount}
                    onChange={(e) => setElevatorHallCount(Number(e.target.value))}
                    className="portal-input"
                    min="0"
                  />
                  <label style={{marginTop: '0.5rem'}}>–ü–ª–æ—â–∞–¥—å 1 –ª–∏—Ñ—Ç–æ–≤–æ–≥–æ —Ö–æ–ª–ª–∞ (–º¬≤)</label>
                  <input
                    type="number"
                    value={elevatorHallArea}
                    onChange={(e) => setElevatorHallArea(Number(e.target.value))}
                    className="portal-input"
                    min="0"
                    step="0.1"
                  />
                </div>
              </div>

              {/* –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø–æ–º–µ—â–µ–Ω–∏—è */}
              <h4 style={{color: 'var(--accent-orange)', marginTop: '1.5rem'}}>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø–æ–º–µ—â–µ–Ω–∏—è</h4>
              <div className="portal-grid">
                <div className="portal-grid-item">
                  <label>–í–µ–Ω—Ç–∫–∞–º–µ—Ä—ã</label>
                  <input
                    type="number"
                    value={techVentilationCount}
                    onChange={(e) => setTechVentilationCount(Number(e.target.value))}
                    className="portal-input"
                    min="0"
                  />
                  <label style={{marginTop: '0.5rem'}}>–ü–ª–æ—â–∞–¥—å (–º¬≤)</label>
                  <input
                    type="number"
                    value={techVentilationArea}
                    onChange={(e) => setTechVentilationArea(Number(e.target.value))}
                    className="portal-input"
                    min="0"
                    step="0.1"
                  />
                </div>
                <div className="portal-grid-item">
                  <label>–≠–ª–µ–∫—Ç—Ä–æ—â–∏—Ç–æ–≤—ã–µ</label>
                  <input
                    type="number"
                    value={techElectricalCount}
                    onChange={(e) => setTechElectricalCount(Number(e.target.value))}
                    className="portal-input"
                    min="0"
                  />
                  <label style={{marginTop: '0.5rem'}}>–ü–ª–æ—â–∞–¥—å (–º¬≤)</label>
                  <input
                    type="number"
                    value={techElectricalArea}
                    onChange={(e) => setTechElectricalArea(Number(e.target.value))}
                    className="portal-input"
                    min="0"
                    step="0.1"
                  />
                </div>
                <div className="portal-grid-item">
                  <label>–¢–µ–ø–ª–æ–ø—É–Ω–∫—Ç—ã</label>
                  <input
                    type="number"
                    value={techHeatingCount}
                    onChange={(e) => setTechHeatingCount(Number(e.target.value))}
                    className="portal-input"
                    min="0"
                  />
                  <label style={{marginTop: '0.5rem'}}>–ü–ª–æ—â–∞–¥—å (–º¬≤)</label>
                  <input
                    type="number"
                    value={techHeatingArea}
                    onChange={(e) => setTechHeatingArea(Number(e.target.value))}
                    className="portal-input"
                    min="0"
                    step="0.1"
                  />
                </div>
                <div className="portal-grid-item">
                  <label>–ù–∞—Å–æ—Å–Ω—ã–µ —Å—Ç–∞–Ω—Ü–∏–∏</label>
                  <input
                    type="number"
                    value={techPumpingCount}
                    onChange={(e) => setTechPumpingCount(Number(e.target.value))}
                    className="portal-input"
                    min="0"
                  />
                  <label style={{marginTop: '0.5rem'}}>–ü–ª–æ—â–∞–¥—å (–º¬≤)</label>
                  <input
                    type="number"
                    value={techPumpingArea}
                    onChange={(e) => setTechPumpingArea(Number(e.target.value))}
                    className="portal-input"
                    min="0"
                    step="0.1"
                  />
                </div>
                <div className="portal-grid-item">
                  <label>–¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ç–æ—Ä–Ω—ã–µ</label>
                  <input
                    type="number"
                    value={techTransformerCount}
                    onChange={(e) => setTechTransformerCount(Number(e.target.value))}
                    className="portal-input"
                    min="0"
                  />
                  <label style={{marginTop: '0.5rem'}}>–ü–ª–æ—â–∞–¥—å (–º¬≤)</label>
                  <input
                    type="number"
                    value={techTransformerArea}
                    onChange={(e) => setTechTransformerArea(Number(e.target.value))}
                    className="portal-input"
                    min="0"
                    step="0.1"
                  />
                </div>
                <div className="portal-grid-item">
                  <label>–¢–µ–ª–µ–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–µ</label>
                  <input
                    type="number"
                    value={techTelecomCount}
                    onChange={(e) => setTechTelecomCount(Number(e.target.value))}
                    className="portal-input"
                    min="0"
                  />
                  <label style={{marginTop: '0.5rem'}}>–ü–ª–æ—â–∞–¥—å (–º¬≤)</label>
                  <input
                    type="number"
                    value={techTelecomArea}
                    onChange={(e) => setTechTelecomArea(Number(e.target.value))}
                    className="portal-input"
                    min="0"
                    step="0.1"
                  />
                </div>
                <div className="portal-grid-item">
                  <label>–í–æ–¥–æ–ø—Ä–æ–≤–æ–¥–Ω—ã–µ —É–∑–ª—ã</label>
                  <input
                    type="number"
                    value={techWaterCount}
                    onChange={(e) => setTechWaterCount(Number(e.target.value))}
                    className="portal-input"
                    min="0"
                  />
                  <label style={{marginTop: '0.5rem'}}>–ü–ª–æ—â–∞–¥—å (–º¬≤)</label>
                  <input
                    type="number"
                    value={techWaterArea}
                    onChange={(e) => setTechWaterArea(Number(e.target.value))}
                    className="portal-input"
                    min="0"
                    step="0.1"
                  />
                </div>
                <div className="portal-grid-item">
                  <label>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —ç—Ç–∞–∂–∏</label>
                  <input
                    type="number"
                    value={techFloorCount}
                    onChange={(e) => setTechFloorCount(Number(e.target.value))}
                    className="portal-input"
                    min="0"
                  />
                  <label style={{marginTop: '0.5rem'}}>–ü–ª–æ—â–∞–¥—å (–º¬≤)</label>
                  <input
                    type="number"
                    value={techFloorArea}
                    onChange={(e) => setTechFloorArea(Number(e.target.value))}
                    className="portal-input"
                    min="0"
                    step="0.1"
                  />
                </div>
              </div>

              {/* –•—Ä–∞–Ω–µ–Ω–∏–µ –∏ –ø–∞—Ä–∫–æ–≤–∫–∞ */}
              <h4 style={{color: 'var(--accent-orange)', marginTop: '1.5rem'}}>–•—Ä–∞–Ω–µ–Ω–∏–µ –∏ –ø–∞—Ä–∫–æ–≤–∫–∞</h4>
              <div className="portal-grid">
                <div className="portal-grid-item">
                  <label>–ö–ª–∞–¥–æ–≤—ã–µ</label>
                  <input
                    type="number"
                    value={storageCount}
                    onChange={(e) => setStorageCount(Number(e.target.value))}
                    className="portal-input"
                    min="0"
                  />
                  <label style={{marginTop: '0.5rem'}}>–ü–ª–æ—â–∞–¥—å (–º¬≤)</label>
                  <input
                    type="number"
                    value={storageArea}
                    onChange={(e) => setStorageArea(Number(e.target.value))}
                    className="portal-input"
                    min="0"
                    step="0.1"
                  />
                </div>
                <div className="portal-grid-item">
                  <label>–ú—É—Å–æ—Ä–Ω—ã–µ –∫–∞–º–µ—Ä—ã</label>
                  <input
                    type="number"
                    value={wasteRoomCount}
                    onChange={(e) => setWasteRoomCount(Number(e.target.value))}
                    className="portal-input"
                    min="0"
                  />
                  <label style={{marginTop: '0.5rem'}}>–ü–ª–æ—â–∞–¥—å (–º¬≤)</label>
                  <input
                    type="number"
                    value={wasteRoomArea}
                    onChange={(e) => setWasteRoomArea(Number(e.target.value))}
                    className="portal-input"
                    min="0"
                    step="0.1"
                  />
                </div>
                <div className="portal-grid-item">
                  <label>–ü–æ–¥–∑–µ–º–Ω—ã–µ –ø–∞—Ä–∫–æ–≤–∫–∏</label>
                  <input
                    type="number"
                    value={parkingUndergroundCount}
                    onChange={(e) => setParkingUndergroundCount(Number(e.target.value))}
                    className="portal-input"
                    min="0"
                  />
                  <label style={{marginTop: '0.5rem'}}>–ü–ª–æ—â–∞–¥—å (–º¬≤)</label>
                  <input
                    type="number"
                    value={parkingUndergroundArea}
                    onChange={(e) => setParkingUndergroundArea(Number(e.target.value))}
                    className="portal-input"
                    min="0"
                    step="0.1"
                  />
                </div>
              </div>

              {/* –û–±—â–∏–µ –∫–æ—Ä–∏–¥–æ—Ä—ã */}
              <h4 style={{color: 'var(--accent-orange)', marginTop: '1.5rem'}}>–û–±—â–∏–µ –∫–æ—Ä–∏–¥–æ—Ä—ã</h4>
              <div className="portal-grid">
                <div className="portal-grid-item">
                  <label>–ö–æ—Ä–∏–¥–æ—Ä—ã –Ω–∞ 1 —ç—Ç–∞–∂–µ</label>
                  <input
                    type="number"
                    value={commonCorridorCount}
                    onChange={(e) => setCommonCorridorCount(Number(e.target.value))}
                    className="portal-input"
                    min="0"
                  />
                  <label style={{marginTop: '0.5rem'}}>–ü–ª–æ—â–∞–¥—å 1 –∫–æ—Ä–∏–¥–æ—Ä–∞ (–º¬≤)</label>
                  <input
                    type="number"
                    value={commonCorridorArea}
                    onChange={(e) => setCommonCorridorArea(Number(e.target.value))}
                    className="portal-input"
                    min="0"
                    step="0.1"
                  />
                </div>
              </div>

              {/* –û—Ö—Ä–∞–Ω–∞ –∏ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏—è */}
              <h4 style={{color: 'var(--accent-orange)', marginTop: '1.5rem'}}>–û—Ö—Ä–∞–Ω–∞ –∏ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏—è</h4>
              <div className="portal-grid">
                <div className="portal-grid-item">
                  <label>–ü–æ—Å—Ç—ã –æ—Ö—Ä–∞–Ω—ã</label>
                  <input
                    type="number"
                    value={securityPostCount}
                    onChange={(e) => setSecurityPostCount(Number(e.target.value))}
                    className="portal-input"
                    min="0"
                  />
                  <label style={{marginTop: '0.5rem'}}>–ü–ª–æ—â–∞–¥—å (–º¬≤)</label>
                  <input
                    type="number"
                    value={securityPostArea}
                    onChange={(e) => setSecurityPostArea(Number(e.target.value))}
                    className="portal-input"
                    min="0"
                    step="0.1"
                  />
                </div>
                <div className="portal-grid-item">
                  <label>–ö–æ–º–Ω–∞—Ç—ã –ø–µ—Ä—Å–æ–Ω–∞–ª–∞</label>
                  <input
                    type="number"
                    value={staffRoomCount}
                    onChange={(e) => setStaffRoomCount(Number(e.target.value))}
                    className="portal-input"
                    min="0"
                  />
                  <label style={{marginTop: '0.5rem'}}>–ü–ª–æ—â–∞–¥—å (–º¬≤)</label>
                  <input
                    type="number"
                    value={staffRoomArea}
                    onChange={(e) => setStaffRoomArea(Number(e.target.value))}
                    className="portal-input"
                    min="0"
                    step="0.1"
                  />
                </div>
              </div>
            </div>

            <div style={{textAlign: 'center', marginTop: '2rem', color: 'var(--text-white)'}}>
              <p><strong>–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–º–µ—â–µ–Ω–∏–π: {calculatedRoomsCount}</strong></p>
              {calculatedRoomsArea > 0 && (
                <p>–û–±—â–∞—è –ø–ª–æ—â–∞–¥—å –ø–æ–º–µ—â–µ–Ω–∏–π: {calculatedRoomsArea.toFixed(1)} –º¬≤</p>
              )}
            </div>

            <div style={{textAlign: 'center', marginTop: '2rem'}}>
              <button
                onClick={() => setShowRoomsModal(false)}
                className="portal-button"
              >
                ‚úÖ –ü—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
              </button>
            </div>
          </div>
        </div>
      )}

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ê–ü–° */}
      {showAPSSettingsModal && (
        <div className="portal-modal active">
          <div className="portal-modal-content" style={{maxWidth: '900px', maxHeight: '80vh', overflowY: 'auto'}}>
            <h3 style={{color: 'var(--text-white)', marginBottom: '1.5rem', textAlign: 'center'}}>
              ‚öôÔ∏è –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã –ê–ü–°
            </h3>

            {/* –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã */}
            <div style={{marginBottom: '2rem'}}>
              <h4 style={{color: 'var(--accent-orange)', marginBottom: '1rem'}}>–û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã</h4>
              <div className="portal-grid">
                <div className="portal-grid-item">
                  <label>–ü–æ–∫—Ä—ã—Ç–∏–µ –¥–∞—Ç—á–∏–∫–∞ (–º¬≤)</label>
                  <input
                    type="number"
                    value={detectorCoverage}
                    onChange={(e) => setDetectorCoverage(Number(e.target.value))}
                    className="portal-input"
                    min="1"
                  />
                </div>
                <div className="portal-grid-item">
                  <label>–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –ò–ü–† (–º)</label>
                  <input
                    type="number"
                    value={manualCallDistance}
                    onChange={(e) => setManualCallDistance(Number(e.target.value))}
                    className="portal-input"
                    min="1"
                  />
                </div>
                <div className="portal-grid-item">
                  <label>–†–∞–¥–∏—É—Å –æ–ø–æ–≤–µ—â–∞—Ç–µ–ª—è (–º)</label>
                  <input
                    type="number"
                    value={sounderCoverage}
                    onChange={(e) => setSounderCoverage(Number(e.target.value))}
                    className="portal-input"
                    min="1"
                  />
                </div>
                <div className="portal-grid-item">
                  <label>–ó–∞–ø–∞—Å –∫–∞–±–µ–ª—è (%)</label>
                  <input
                    type="number"
                    value={cableReserve}
                    onChange={(e) => setCableReserve(Number(e.target.value))}
                    className="portal-input"
                    min="0"
                    max="50"
                  />
                </div>
                <div className="portal-grid-item">
                  <label>–†–∞–∑–º–µ—Ä –∑–æ–Ω—ã (–º¬≤)</label>
                  <input
                    type="number"
                    value={zoneSize}
                    onChange={(e) => setZoneSize(Number(e.target.value))}
                    className="portal-input"
                    min="100"
                  />
                </div>
              </div>
            </div>

            {/* –í—ã–±–æ—Ä –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ */}
            <div style={{marginBottom: '2rem'}}>
              <h4 style={{color: 'var(--accent-orange)', marginBottom: '1rem'}}>–í—ã–±–æ—Ä –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞</h4>

              {/* –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–∞–∂–¥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è */}
              {Object.entries(equipmentModels).map(([categoryKey, categoryData]) => {
                const categoryModels = Object.keys(categoryData.models)
                const selectedCount = categoryModels.filter(model => selectedEquipmentModels[model]).length
                const allSelected = selectedCount === categoryModels.length

                return (
                  <div key={categoryKey} style={{
                    marginBottom: '1.5rem',
                    background: 'rgba(255, 255, 255, 0.05)',
                    borderRadius: '12px',
                    padding: '1.5rem',
                    border: '1px solid rgba(255, 107, 53, 0.2)'
                  }}>
                    {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å –∫–Ω–æ–ø–∫–æ–π "–í—ã–±—Ä–∞—Ç—å –≤—Å–µ" */}
                    <div style={{
                      display: 'flex',
                      justifyContent: 'space-between',
                      alignItems: 'center',
                      marginBottom: '1rem'
                    }}>
                      <h5 style={{
                        color: 'var(--text-white)',
                        margin: 0,
                        fontSize: '1.1rem',
                        fontWeight: '600'
                      }}>
                        {categoryData.name} ({selectedCount}/{categoryModels.length})
                      </h5>

                      <div style={{display: 'flex', gap: '0.5rem'}}>
                        <button
                          onClick={() => selectAllModelsInCategory(categoryKey)}
                          className="portal-button"
                          style={{
                            background: allSelected
                              ? 'linear-gradient(135deg, #27ae60, #229954)'
                              : 'linear-gradient(135deg, #3498db, #2980b9)',
                            padding: '0.5rem 1rem',
                            fontSize: '0.85rem',
                            opacity: allSelected ? 0.7 : 1
                          }}
                          disabled={allSelected}
                        >
                          ‚úÖ –í—ã–±—Ä–∞—Ç—å –≤—Å–µ
                        </button>

                        <button
                          onClick={() => deselectAllModelsInCategory(categoryKey)}
                          className="portal-button"
                          style={{
                            background: selectedCount === 0
                              ? 'linear-gradient(135deg, #95a5a6, #7f8c8d)'
                              : 'linear-gradient(135deg, #e74c3c, #c0392b)',
                            padding: '0.5rem 1rem',
                            fontSize: '0.85rem',
                            opacity: selectedCount === 0 ? 0.7 : 1
                          }}
                          disabled={selectedCount === 0}
                        >
                          ‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –≤—Å–µ
                        </button>
                      </div>
                    </div>

                    {/* –°–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
                    <div className="portal-grid" style={{gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))'}}>
                      {Object.entries(categoryData.models).map(([modelKey, modelName]) => (
                        <div key={modelKey} className="portal-grid-item">
                          <label style={{
                            display: 'flex',
                            alignItems: 'flex-start',
                            gap: '0.75rem',
                            cursor: 'pointer',
                            padding: '0.75rem',
                            background: selectedEquipmentModels[modelKey]
                              ? 'rgba(255, 107, 53, 0.1)'
                              : 'rgba(255, 255, 255, 0.03)',
                            borderRadius: '8px',
                            border: selectedEquipmentModels[modelKey]
                              ? '1px solid rgba(255, 107, 53, 0.3)'
                              : '1px solid rgba(255, 255, 255, 0.1)',
                            transition: 'all 0.3s ease'
                          }}>
                            <input
                              type="checkbox"
                              checked={selectedEquipmentModels[modelKey] || false}
                              onChange={(e) => setSelectedEquipmentModels({
                                ...selectedEquipmentModels,
                                [modelKey]: e.target.checked
                              })}
                              style={{
                                width: '18px',
                                height: '18px',
                                accentColor: 'var(--accent-orange)',
                                marginTop: '2px'
                              }}
                            />
                            <span style={{
                              color: 'var(--text-white)',
                              fontSize: '0.9rem',
                              lineHeight: '1.4',
                              fontWeight: selectedEquipmentModels[modelKey] ? '500' : '400'
                            }}>
                              {modelName}
                            </span>
                          </label>
                        </div>
                      ))}
                    </div>
                  </div>
                )
              })}
            </div>

            {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ */}
            <div style={{marginBottom: '2rem'}}>
              <h4 style={{color: 'var(--accent-orange)', marginBottom: '1rem'}}>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ</h4>
              {customEquipment.map((item, index) => (
                <div key={index} className="portal-grid" style={{marginBottom: '1rem', background: 'rgba(255,255,255,0.05)', padding: '1rem', borderRadius: '8px'}}>
                  <div className="portal-grid-item">
                    <label>–ù–∞–∑–≤–∞–Ω–∏–µ</label>
                    <input
                      type="text"
                      value={item.name}
                      onChange={(e) => {
                        const updated = [...customEquipment]
                        updated[index].name = e.target.value
                        setCustomEquipment(updated)
                      }}
                      className="portal-input"
                      placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è"
                    />
                  </div>
                  <div className="portal-grid-item">
                    <label>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ</label>
                    <input
                      type="number"
                      value={item.quantity}
                      onChange={(e) => {
                        const updated = [...customEquipment]
                        updated[index].quantity = Number(e.target.value)
                        setCustomEquipment(updated)
                      }}
                      className="portal-input"
                      min="1"
                    />
                  </div>
                  <div className="portal-grid-item">
                    <label>–ï–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è</label>
                    <input
                      type="text"
                      value={item.unit}
                      onChange={(e) => {
                        const updated = [...customEquipment]
                        updated[index].unit = e.target.value
                        setCustomEquipment(updated)
                      }}
                      className="portal-input"
                      placeholder="—à—Ç., –º, –∫–≥"
                    />
                  </div>
                  <div className="portal-grid-item" style={{display: 'flex', alignItems: 'end'}}>
                    <button
                      onClick={() => {
                        const updated = customEquipment.filter((_, i) => i !== index)
                        setCustomEquipment(updated)
                      }}
                      className="portal-button"
                      style={{
                        background: 'linear-gradient(135deg, #e74c3c, #c0392b)',
                        padding: '0.75rem 1rem',
                        fontSize: '0.9rem'
                      }}
                    >
                      üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
                    </button>
                  </div>
                </div>
              ))}

              <button
                onClick={() => setCustomEquipment([...customEquipment, {name: '', quantity: 1, unit: '—à—Ç.'}])}
                className="portal-button"
                style={{
                  background: 'linear-gradient(135deg, #27ae60, #229954)',
                  marginTop: '1rem'
                }}
              >
                ‚ûï –î–æ–±–∞–≤–∏—Ç—å –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ
              </button>
            </div>

            <div style={{display: 'flex', gap: '1rem', justifyContent: 'center', marginTop: '2rem'}}>
              <button
                onClick={() => setShowAPSSettingsModal(false)}
                className="portal-button"
                style={{
                  background: 'linear-gradient(135deg, var(--accent-orange), var(--accent-red))'
                }}
              >
                ‚úÖ –ü—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
              </button>
              <button
                onClick={() => setShowAPSSettingsModal(false)}
                className="portal-button secondary"
              >
                ‚ùå –û—Ç–º–µ–Ω–∞
              </button>
            </div>
          </div>
        </div>
      )}

      {/* –§—É—Ç–µ—Ä –ø–æ—Ä—Ç–∞–ª–∞ */}
      <footer style={{
        background: 'rgba(26, 54, 93, 0.8)',
        color: 'var(--text-white)',
        textAlign: 'center',
        padding: '2rem',
        marginTop: '3rem',
        borderTop: '1px solid rgba(255, 107, 53, 0.2)'
      }}>
        <p>&copy; 2024 –ü–æ—Ä—Ç–∞–ª –ê–ü–°. –°–∏—Å—Ç–µ–º–∞ —Ä–∞—Å—á–µ—Ç–∞ –ø–æ–∂–∞—Ä–Ω–æ–π —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏–∏</p>
        <p style={{opacity: 0.7, fontSize: '0.9em'}}>
          –†–∞—Å—á–µ—Ç—ã –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è —Å–æ–≥–ª–∞—Å–Ω–æ –°–ü 5.13130.2009 –∏ –ì–û–°–¢ –† 53325-2012
        </p>
      </footer>
    </div>
  )
}

export default App